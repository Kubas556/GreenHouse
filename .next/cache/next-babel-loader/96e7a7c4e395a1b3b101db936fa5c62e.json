{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider, makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { lightTheme, darkTheme } from '../components/Theme';\nimport CustomAppBar from \"../components/CustomAppBar\";\nimport { Switch, FormControlLabel, Box, Divider, Drawer, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { auth } from '../firebase/index';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    text: {\n      padding: theme.spacing(2, 2, 0)\n    },\n    paper: {\n      paddingBottom: 50\n    },\n    list: {\n      marginBottom: theme.spacing(2)\n    },\n    subheader: {\n      backgroundColor: theme.palette.background.paper\n    },\n    appBar: {\n      top: 'auto',\n      bottom: 0\n    },\n    grow: {\n      flexGrow: 1\n    },\n    fabButton: {\n      position: 'absolute',\n      zIndex: 1,\n      top: -30,\n      left: 0,\n      right: 0,\n      margin: '0 auto'\n    }\n  };\n});\nexport default function MyApp(props) {\n  var _clsx, _clsx2;\n\n  var _useState = useState(false),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var _useState2 = useState(true),\n      showBtn = _useState2[0],\n      setShowBtn = _useState2[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleDrawerOpen = function handleDrawerOpen() {\n    setOpen(true);\n  };\n\n  var handleDrawerClose = function handleDrawerClose() {\n    setOpen(false);\n  };\n\n  var themeReg = /theme=(\\w+)/;\n  var classes = useTheme();\n  var router = useRouter();\n  useEffect(function () {\n    var themeCookie = document.cookie.match(themeReg);\n    if (themeCookie) setTheme(JSON.parse(themeCookie[1])); // Remove the server-side injected CSS.\n\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n\n  var switchTheme = function switchTheme() {\n    document.cookie = 'theme=' + !theme;\n    setTheme(!theme);\n  };\n\n  function toggleThemeSwitch(value) {\n    setShowBtn(value);\n  }\n\n  ;\n  var Component = props.Component,\n      pageProps = props.pageProps;\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), __jsx(ThemeProvider, {\n    theme: theme ? darkTheme : lightTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, showBtn ? __jsx(CustomAppBar, {\n    text: \"Some name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }) : null, __jsx(Box, {\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    theme: theme,\n    setThemeBtn: toggleThemeSwitch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))), __jsx(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, (_clsx = {}, _defineProperty(_clsx, classes.drawerOpen, open), _defineProperty(_clsx, classes.drawerClose, !open), _clsx)),\n    classes: {\n      paper: clsx((_clsx2 = {}, _defineProperty(_clsx2, classes.drawerOpen, open), _defineProperty(_clsx2, classes.drawerClose, !open), _clsx2))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? __jsx(ChevronRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }) : __jsx(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map(function (text, index) {\n    return __jsx(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, index % 2 === 0 ? __jsx(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : __jsx(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), __jsx(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  })), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, ['All mail', 'Trash', 'Spam'].map(function (text, index) {\n    return __jsx(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, __jsx(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, index % 2 === 0 ? __jsx(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }) : __jsx(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), __jsx(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  })))), showBtn ? __jsx(FormControlLabel, {\n    labelPlacement: \"start\",\n    label: \"Dark mode\",\n    control: __jsx(Switch, {\n      checked: theme,\n      onChange: switchTheme.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }) : null));\n}","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP/pages/_app.js"],"names":["React","useEffect","useState","App","Head","useRouter","ThemeProvider","makeStyles","useTheme","CssBaseline","lightTheme","darkTheme","CustomAppBar","Switch","FormControlLabel","Box","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","auth","useStyles","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","MyApp","props","setTheme","showBtn","setShowBtn","open","setOpen","handleDrawerOpen","handleDrawerClose","themeReg","classes","router","themeCookie","document","cookie","match","JSON","parse","jssStyles","querySelector","parentElement","removeChild","switchTheme","toggleThemeSwitch","value","Component","pageProps","root","clsx","drawer","drawerOpen","drawerClose","toolbar","direction","map","index","bind"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport App from 'next/app';\r\nimport Head from 'next/head';\r\nimport {useRouter} from 'next/router';\r\nimport { ThemeProvider,makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {lightTheme,darkTheme} from '../components/Theme';\r\nimport CustomAppBar from \"../components/CustomAppBar\";\r\nimport {Switch,FormControlLabel,Box,Divider,Drawer,List,ListItem,ListItemIcon,ListItemText} from \"@material-ui/core\";\r\nimport {auth} from '../firebase/index';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    text: {\r\n        padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n        paddingBottom: 50,\r\n    },\r\n    list: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    subheader: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        top: -30,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto',\r\n    },\r\n}));\r\n\r\nexport default function MyApp (props) {\r\n\r\n        const [theme,setTheme] = useState(false);\r\n        const [showBtn,setShowBtn] = useState(true);\r\n        const [open, setOpen] = React.useState(false);\r\n\r\n        const handleDrawerOpen = () => {\r\n            setOpen(true);\r\n        };\r\n\r\n        const handleDrawerClose = () => {\r\n            setOpen(false);\r\n        };\r\n\r\n        const themeReg = /theme=(\\w+)/;\r\n        const classes = useTheme();\r\n        const router = useRouter();\r\n\r\n    useEffect(()=> {\r\n        const themeCookie = document.cookie.match(themeReg);\r\n\r\n        if(themeCookie)\r\n            setTheme(JSON.parse(themeCookie[1]));\r\n\r\n        // Remove the server-side injected CSS.\r\n        const jssStyles = document.querySelector('#jss-server-side');\r\n        if (jssStyles) {\r\n            jssStyles.parentElement.removeChild(jssStyles);\r\n        }\r\n    },[]);\r\n\r\n    const switchTheme = () => {\r\n        document.cookie = 'theme='+(!theme);\r\n        setTheme(!theme);\r\n    };\r\n\r\n    function toggleThemeSwitch(value) {\r\n        setShowBtn(value);\r\n    };\r\n\r\n    const { Component, pageProps } = props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>My page</title>\r\n                    <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n                </Head>\r\n                <ThemeProvider theme={theme?darkTheme:lightTheme}>\r\n                    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n                    {/*<div style={\r\n                        {display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        height: \"100vh\"}\r\n                    }>*/}\r\n                    <CssBaseline />\r\n                    <div className={classes.root}>\r\n                    {showBtn?<CustomAppBar text={\"Some name\"}/>:null}\r\n                        <Box height={\"100%\"}>\r\n                            <Component {...pageProps} theme={theme} setThemeBtn={toggleThemeSwitch} />\r\n                        </Box>\r\n                        <Drawer variant=\"permanent\" className={clsx(classes.drawer, {\r\n                            [classes.drawerOpen]: open,\r\n                            [classes.drawerClose]: !open,\r\n                        })}\r\n                                classes={{\r\n                                    paper: clsx({\r\n                                        [classes.drawerOpen]: open,\r\n                                        [classes.drawerClose]: !open,\r\n                                    }),\r\n                                }}>\r\n                            <div className={classes.toolbar}>\r\n                                <IconButton onClick={handleDrawerClose}>\r\n                                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                            <Divider />\r\n                            <List>\r\n                                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                                    <ListItem button key={text}>\r\n                                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                        <ListItemText primary={text} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                            <Divider />\r\n                            <List>\r\n                                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                                    <ListItem button key={text}>\r\n                                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                        <ListItemText primary={text} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </Drawer>\r\n                    </div>\r\n                    {showBtn?\r\n                        <FormControlLabel labelPlacement={\"start\"} label={\"Dark mode\"} control={<Switch checked={theme} onChange={switchTheme.bind(this)}/>}/>\r\n                        :null}\r\n                    {/*</div>*/}\r\n\r\n                </ThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}