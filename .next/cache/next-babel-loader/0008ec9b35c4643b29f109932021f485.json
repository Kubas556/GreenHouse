{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { lightTheme, darkTheme } from '../components/Theme';\nimport CustomAppBar from \"../components/CustomAppBar\";\nimport { Switch, FormControlLabel, Box } from \"@material-ui/core\";\nimport { auth } from '../firebase/index';\nexport default function MyApp(props) {\n  var _useState = useState({\n    theme: false,\n    status: \"LOADING\",\n    showBtn: true\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var themeReg = /theme=(\\w+)/;\n  var router = useRouter();\n  useEffect(function () {\n    auth.onAuthStateChanged(function (authUser) {\n      console.log(authUser);\n\n      if (authUser) {\n        setState({\n          status: 'SIGNED_IN'\n        });\n      } else {\n        router.push({\n          pathname: \"/login\",\n          query: {\n            refresh: 'false'\n          }\n        });\n      }\n    }); // Remove the server-side injected CSS.\n\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  });\n\n  var switchTheme = function switchTheme() {\n    document.cookie = 'theme=' + !state.theme;\n    setState({\n      theme: !state.theme\n    });\n  };\n\n  function toggleThemeSwitch(value) {\n    setState({\n      showBtn: value\n    });\n  }\n\n  ;\n  var Component = props.Component,\n      pageProps = props.pageProps;\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), __jsx(ThemeProvider, {\n    theme: state.theme ? darkTheme : lightTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), state.showBtn ? __jsx(CustomAppBar, {\n    text: \"Some name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }) : null, __jsx(Box, {\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), this.state.showBtn ? __jsx(FormControlLabel, {\n    labelPlacement: \"start\",\n    label: \"Dark mode\",\n    control: __jsx(Switch, {\n      checked: state.theme,\n      onChange: switchTheme.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }) : null));\n}","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP/pages/_app.js"],"names":["React","useEffect","useState","App","Head","useRouter","ThemeProvider","CssBaseline","lightTheme","darkTheme","CustomAppBar","Switch","FormControlLabel","Box","auth","MyApp","props","theme","status","showBtn","state","setState","themeReg","router","onAuthStateChanged","authUser","console","log","push","pathname","query","refresh","jssStyles","document","querySelector","parentElement","removeChild","switchTheme","cookie","toggleThemeSwitch","value","Component","pageProps","bind"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport App from 'next/app';\r\nimport Head from 'next/head';\r\nimport {useRouter} from 'next/router';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {lightTheme,darkTheme} from '../components/Theme';\r\nimport CustomAppBar from \"../components/CustomAppBar\";\r\nimport {Switch,FormControlLabel,Box} from \"@material-ui/core\";\r\nimport {auth} from '../firebase/index';\r\n\r\nexport default function MyApp (props) {\r\n\r\n        const [state,setState] = useState({theme: false,status:\"LOADING\",showBtn:true});\r\n        const themeReg = /theme=(\\w+)/;\r\n        const router = useRouter();\r\n\r\n    useEffect(()=> {\r\n\r\n        auth.onAuthStateChanged(authUser => {\r\n            console.log(authUser);\r\n            if(authUser) {\r\n                setState({\r\n                    status: 'SIGNED_IN'\r\n                });\r\n            } else {\r\n                router.push({pathname: \"/login\", query: {refresh: 'false'}});\r\n            }\r\n        });\r\n\r\n        // Remove the server-side injected CSS.\r\n        const jssStyles = document.querySelector('#jss-server-side');\r\n        if (jssStyles) {\r\n            jssStyles.parentElement.removeChild(jssStyles);\r\n        }\r\n    });\r\n\r\n    const switchTheme = () => {\r\n        document.cookie = 'theme='+(!state.theme);\r\n        setState({\r\n            theme:!state.theme\r\n        });\r\n    };\r\n\r\n    function toggleThemeSwitch(value) {\r\n        setState({\r\n            showBtn:value\r\n        });\r\n    };\r\n\r\n    const { Component, pageProps } = props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>My page</title>\r\n                    <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n                </Head>\r\n                <ThemeProvider theme={state.theme?darkTheme:lightTheme}>\r\n                    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n                    {/*<div style={\r\n                        {display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        height: \"100vh\"}\r\n                    }>*/}\r\n                    <CssBaseline />\r\n                    {state.showBtn?<CustomAppBar text={\"Some name\"}/>:null}\r\n                    <Box height={\"100%\"}>\r\n                        <Component />\r\n                    </Box>\r\n                    {this.state.showBtn?\r\n                        <FormControlLabel labelPlacement={\"start\"} label={\"Dark mode\"} control={<Switch checked={state.theme} onChange={switchTheme.bind(this)}/>}/>\r\n                        :null}\r\n                    {/*</div>*/}\r\n                </ThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}