{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\components\\\\OnlyDesktop.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar onlyDesktop = function onlyDesktop(Component) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(_class, _React$Component);\n\n      function _class(props) {\n        var _this;\n\n        _classCallCheck(this, _class);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));\n        _this.state = {\n          touchDisplay: false\n        };\n        return _this;\n      }\n\n      _createClass(_class, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var maxpoints = navigator.maxTouchPoints;\n          this.setState({\n            touchDisplay: maxpoints\n          });\n        }\n      }, {\n        key: \"renderContent\",\n        value: function renderContent() {\n          // @ts-ignore\n          var touchDisplay = this.state.touchDisplay;\n\n          if (touchDisplay) {\n            return __jsx(\"div\", {\n              style: {\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, __jsx(\"h1\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, \"Mobile devices are currently unsuported\"));\n          } else {\n            // @ts-ignore\n            return __jsx(Component, _extends({}, this.props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24\n              },\n              __self: this\n            }));\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return __jsx(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, this.renderContent());\n        }\n      }]);\n\n      return _class;\n    }(React.Component)\n  );\n};\n\nexport default onlyDesktop;","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/components/OnlyDesktop.tsx"],"names":["React","onlyDesktop","Component","props","state","touchDisplay","maxpoints","navigator","maxTouchPoints","setState","position","width","height","renderContent"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAyD,OAAzD;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAwC;AACxD;AAAA;AAAA;AAAA;;AACI,sBAAYC,KAAZ,EAAuB;AAAA;;AAAA;;AACnB,oFAAMA,KAAN;AACA,cAAKC,KAAL,GAAa;AACTC,UAAAA,YAAY,EAAE;AADL,SAAb;AAFmB;AAKtB;;AANL;AAAA;AAAA,4CAOwB;AAChB,cAAIC,SAAS,GAAGC,SAAS,CAACC,cAA1B;AACA,eAAKC,QAAL,CAAc;AACVJ,YAAAA,YAAY,EAAEC;AADJ,WAAd;AAGH;AAZL;AAAA;AAAA,wCAaoB;AACZ;AADY,cAEJD,YAFI,GAEa,KAAKD,KAFlB,CAEJC,YAFI;;AAGZ,cAAGA,YAAH,EAAiB;AACb,mBAAO;AAAK,cAAA,KAAK,EAAE;AAACK,gBAAAA,QAAQ,EAAC,UAAV;AAAqBC,gBAAAA,KAAK,EAAC,MAA3B;AAAkCC,gBAAAA,MAAM,EAAC;AAAzC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAA9D,CAAP;AACH,WAFD,MAEO;AACH;AACA,mBAAO,MAAC,SAAD,eAAgB,KAAKT,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH;AACJ;AAtBL;AAAA;AAAA,iCAuBa;AACL,iBACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,KAAKU,aAAL,EADL,CADJ;AAKH;AA7BL;;AAAA;AAAA,MAAqBb,KAAK,CAACE,SAA3B;AAAA;AA+BH,CAhCD;;AAiCA,eAAeD,WAAf","sourcesContent":["import React, {ReactComponentElement, ReactElement} from 'react';\r\n\r\nconst onlyDesktop = (Component:React.ComponentType<any>) => {\r\n    return class extends React.Component {\r\n        constructor(props:any) {\r\n            super(props);\r\n            this.state = {\r\n                touchDisplay: false,\r\n            };\r\n        }\r\n        componentDidMount() {\r\n            let maxpoints = navigator.maxTouchPoints;\r\n            this.setState({\r\n                touchDisplay: maxpoints\r\n            });\r\n        }\r\n        renderContent() {\r\n            // @ts-ignore\r\n            const { touchDisplay } = this.state;\r\n            if(touchDisplay) {\r\n                return <div style={{position:\"absolute\",width:\"100%\",height:\"100%\"}}><h1>Mobile devices are currently unsuported</h1></div>;\r\n            } else {\r\n                // @ts-ignore\r\n                return <Component { ...this.props } />\r\n            }\r\n        }\r\n        render() {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.renderContent()}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    };\r\n}\r\nexport default onlyDesktop;"]},"metadata":{},"sourceType":"module"}