{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\pages\\\\temperature\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport withAuth from \"../../components/WithAuth\";\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\nimport Tempmeter from \"../../components/Tempmeter\";\nimport Termostat from \"../../components/Termostat\";\nimport { firebase } from \"../../firebase/index\";\nimport { Line } from \"react-chartjs-2\";\nvar useStyle = makeStyles(function (theme) {\n  return {\n    center: {\n      display: 'flex'\n    },\n    controllComponent: {\n      margin: '50px',\n      padding: '1rem'\n    }\n  };\n});\n\nfunction Id(props) {\n  var classes = useStyle();\n\n  var _useState = useState(-50),\n      temp = _useState[0],\n      setTemp = _useState[1];\n\n  var _useState2 = useState(),\n      tempHistoryCharData = _useState2[0],\n      setTempHistoryCharData = _useState2[1];\n\n  var _useState3 = useState(),\n      tempHistoryCharLabels = _useState3[0],\n      setTempHistoryCharLabels = _useState3[1];\n\n  var _useState4 = useState(),\n      defTemp = _useState4[0],\n      setDefTemp = _useState4[1];\n\n  var router = useRouter();\n  var id = router.query.id;\n  var timeFormat = 'MM/DD/YYYY HH:mm';\n  var tempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/temp\");\n  var tempHistoryData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/temps\");\n  var targetTempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\");\n\n  var termostatChange = function termostatChange(value) {\n    firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\").set(value);\n  };\n\n  useEffect(function () {\n    tempData.on('value', function (data) {\n      setTemp(data.val());\n    });\n    tempHistoryData.on('value', function (data) {\n      var charData = [];\n      var charLabels = [];\n\n      _Object$keys(data.val()).forEach(function (key) {\n        charData.push({\n          x: new Date(),\n          y: data.val()[key].temp\n        });\n        charLabels.push(data.val()[key].time[3]);\n      });\n\n      setTempHistoryCharData(charData);\n      setTempHistoryCharLabels(charLabels);\n    });\n    targetTempData.once('value', function (data) {\n      setDefTemp(data.val());\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Teplota\"), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Tempmeter, {\n    theme: props.theme,\n    temp: temp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Termostat, {\n    theme: props.theme,\n    onValueChanged: termostatChange,\n    defaultValue: defTemp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Line, {\n    data: {\n      labels: tempHistoryCharLabels,\n      datasets: [{\n        label: 'temp',\n        data: tempHistoryCharData,\n        backgroundColor: 'rgba(0,0,0,0.0)',\n        pointBackgroundColor: ['red', 'orange'],\n        borderColor: '#1DB954',\n        borderWidth: 0\n      }]\n    },\n    options: {\n      maintainAspectRatio: false,\n      scales: {\n        xAxes: [{\n          type: 'time',\n          time: {\n            unit: 'month'\n          }\n        }]\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })))));\n}\n\nfunction ex(props) {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState5 = useState(\"\"),\n      name = _useState5[0],\n      setName = _useState5[1];\n\n  var nameData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/name\");\n  useEffect(function () {\n    nameData.on('value', function (data) {\n      setName(data.val());\n    });\n  }, []);\n  return __jsx(WithDrawerAppBar, {\n    component: Id,\n    title: name,\n    deviceId: id.toString(),\n    componentProps: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  });\n}\n\nexport default withAuth(ex);","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/pages/temperature/[id].tsx"],"names":["makeStyles","React","useEffect","useState","useRouter","Typography","Paper","withAuth","WithDrawerAppBar","Tempmeter","Termostat","firebase","Line","useStyle","theme","center","display","controllComponent","margin","padding","Id","props","classes","temp","setTemp","tempHistoryCharData","setTempHistoryCharData","tempHistoryCharLabels","setTempHistoryCharLabels","defTemp","setDefTemp","router","id","query","timeFormat","tempData","database","ref","user","tempHistoryData","targetTempData","termostatChange","value","set","on","data","val","charData","charLabels","forEach","key","push","x","Date","y","time","once","labels","datasets","label","backgroundColor","pointBackgroundColor","borderColor","borderWidth","maintainAspectRatio","scales","xAxes","type","unit","ex","name","setName","nameData","toString"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport useSWR from 'swr';\r\nimport {DatePicker,MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {orange} from \"@material-ui/core/colors\";\r\nimport {useRouter} from \"next/router\";\r\nimport {Typography,Paper} from \"@material-ui/core\";\r\nimport withAuth from \"../../components/WithAuth\";\r\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\r\nimport Tempmeter from \"../../components/Tempmeter\";\r\nimport Termostat from \"../../components/Termostat\";\r\nimport {auth, firebase} from \"../../firebase/index\";\r\nimport IPageProps from \"../../interfaces/IPageProps\";\r\nimport Loading from \"../../components/Loading\";\r\nimport {object, string} from \"prop-types\";\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    center:{\r\n        display:'flex'\r\n    },\r\n    controllComponent:{\r\n        margin:'50px',\r\n        padding:'1rem'\r\n    }\r\n}));\r\n\r\nfunction Id(props:IPageProps) {\r\n    const classes = useStyle();\r\n    const [temp,setTemp] = useState<number>(-50);\r\n    const [tempHistoryCharData,setTempHistoryCharData] = useState<any>();\r\n    const [tempHistoryCharLabels,setTempHistoryCharLabels] = useState<any>();\r\n    const [defTemp,setDefTemp] = useState<number>();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const timeFormat = 'MM/DD/YYYY HH:mm';\r\n\r\n\r\n    let tempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/temp\");\r\n    let tempHistoryData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/temps\");\r\n    let targetTempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\");\r\n\r\n    const termostatChange = (value:number) => {\r\n        firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\").set(value);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        tempData.on('value',data=>{\r\n            setTemp(data.val());\r\n        });\r\n\r\n        tempHistoryData.on('value',data=>{\r\n            let charData:any[] = [];\r\n            let charLabels:any[] = [];\r\n            Object.keys(data.val()).forEach(key => {\r\n                charData.push({x:new Date,y:data.val()[key].temp})\r\n                charLabels.push(data.val()[key].time[3])\r\n            });\r\n            setTempHistoryCharData(charData);\r\n            setTempHistoryCharLabels(charLabels);\r\n        });\r\n\r\n        targetTempData.once('value',data=>{\r\n            setDefTemp(data.val());\r\n        });\r\n\r\n    },[]);\r\n\r\n return(\r\n     <div>\r\n         <Typography component={\"h1\"} variant={\"h2\"}>\r\n             Teplota\r\n         </Typography>\r\n         <div className={classes.center}>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n                     <Tempmeter theme={props.theme} temp={temp}/>\r\n                 </Paper>\r\n             </div>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n                     <Termostat theme={props.theme} onValueChanged={termostatChange} defaultValue={defTemp}/>\r\n                 </Paper>\r\n             </div>\r\n         </div>\r\n         <div className={classes.center}>\r\n            <div className={classes.controllComponent}>\r\n                <Paper>\r\n                    <Line data={{\r\n                        labels:tempHistoryCharLabels,\r\n                        datasets: [{\r\n                            label: 'temp',\r\n                            data: tempHistoryCharData,\r\n                            backgroundColor: 'rgba(0,0,0,0.0)',\r\n                            pointBackgroundColor: ['red','orange'],\r\n                            borderColor: '#1DB954',\r\n                            borderWidth: 0\r\n                        }]\r\n                    }} options={{ maintainAspectRatio: false,scales: {\r\n                            xAxes: [{\r\n                                type: 'time',\r\n                                time: {\r\n                                    unit: 'month'\r\n                                }\r\n                            }]\r\n                        } }}/>\r\n                </Paper>\r\n            </div>\r\n         </div>\r\n     </div>\r\n )\r\n}\r\n\r\nfunction ex(props:IPageProps) {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const [name,setName] = useState(\"\");\r\n    let nameData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/name\");\r\n    useEffect(()=>{\r\n        nameData.on('value',data=>{\r\n            setName(data.val());\r\n        });\r\n    },[]);\r\n    return(\r\n        <WithDrawerAppBar component={Id} title={name} deviceId={id.toString()} componentProps={props}/>\r\n    )\r\n}\r\n\r\nexport default withAuth(ex);"]},"metadata":{},"sourceType":"module"}