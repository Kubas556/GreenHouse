{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef } from \"react\"; //@ts-ignore\n\nimport anime from 'animejs';\nimport { useState, useEffect } from \"react\";\n\n/*type Props = {\r\n    width:String\r\n}*/\nvar AirHumidity = function AirHumidity(props) {\n  var componentWidth = 337;\n  var componentHeight = 337;\n  var minY = 176.4;\n  var maxY = 18;\n\n  var _useState = useState(props.value ? props.value : 0),\n      currentValue = _useState[0],\n      setCurrentValue = _useState[1];\n\n  var _useState2 = useState(minY),\n      currentY = _useState2[0],\n      setCurrentY = _useState2[1];\n\n  var _useState3 = useState({\n    x: 60.15\n  }),\n      animX1 = _useState3[0],\n      setAnimX1 = _useState3[1];\n\n  var _useState4 = useState({\n    x: 60.15\n  }),\n      animX2 = _useState4[0],\n      setAnimX2 = _useState4[1];\n\n  var wave1 = useRef(null);\n  var wave2 = useRef(null);\n  var percentageLine = useRef(null);\n  var percentageLine2 = useRef(null);\n  var percentageLevel = useRef(null);\n  var percentageText = useRef(null);\n  var waveGap = 125;\n\n  function setValue(val) {\n    var value = maxY + (minY - maxY) / 100 * (100 - val);\n    var percentage = Math.round(100 - (value - maxY) / (minY - maxY) * 100);\n    setCurrentY(percentage > 0 ? value : minY + 150);\n\n    if (percentageLine.current) {\n      percentageLine.current.setAttribute(\"y1\", value.toString());\n      percentageLine.current.setAttribute(\"y2\", value.toString());\n    }\n\n    if (percentageLine2.current) {\n      percentageLine2.current.setAttribute(\"y1\", value.toString());\n      percentageLine2.current.setAttribute(\"y2\", value.toString());\n    }\n\n    if (percentageLevel.current) percentageLevel.current.setAttribute(\"d\", \"M107.87,\" + value + \"V178H-2.5V\" + value + \"Z\");\n\n    if (percentageText.current) {\n      percentageText.current.setAttribute(\"transform\", \"translate(168.67 \" + (value - 2.5) + \")\");\n      percentageText.current.innerHTML = percentage + \"%\";\n    }\n  }\n\n  anime({\n    targets: animX1,\n    x: [60.15, 100],\n    direction: 'alternate',\n    duration: 7000,\n    easing: 'easeInOutQuad',\n    loop: true,\n    update: function update() {\n      if (wave2.current) wave2.current.setAttribute(\"transform\", \"translate(\" + animX1.x + \",\" + (currentY - waveGap) + \")\");\n    }\n  });\n  anime({\n    targets: animX2,\n    x: [60.15, 30],\n    direction: 'alternate',\n    duration: 5000,\n    easing: 'easeInOutQuad',\n    loop: true,\n    update: function update() {\n      if (wave1.current) wave1.current.setAttribute(\"transform\", \"translate(\" + animX2.x + \",\" + (currentY - waveGap) + \")\");\n    }\n  });\n  /*useEffect(() => {\r\n      setValue(0);\r\n  },[]);*/\n\n  useEffect(function () {\n    var animParam = {\n      value: currentValue\n    };\n    anime({\n      targets: animParam,\n      value: props.value ? props.value : 0,\n      update: function update() {\n        setValue(animParam.value);\n        setCurrentValue(animParam.value);\n      }\n    });\n  }, [props.value]);\n  return __jsx(\"div\", {\n    style: {\n      width: componentWidth,\n      height: componentHeight\n    }\n  }, __jsx(\"svg\", {\n    viewBox: \"0 0 225.68 211.24\",\n    style: {\n      width: componentWidth\n    }\n  }, __jsx(\"defs\", null, __jsx(\"style\", null, \".cls-1-vlh-vz,.cls-7-vlh-vz,.cls-8-vlh-vz{fill:none;}.cls-2-vlh-vz{font-size:12px;fill:\" + (props.theme == 1 ? \"white\" : \"black\") + \";font-family:CenturyGothic, Century Gothic;}.cls-3-vlh-vz{clip-path:url(#clip-path-vlh-vz);}.cls-4-vlh-vz,.cls-5-vlh-vz,.cls-6-vlh-vz{fill:#18b8d4;}.cls-5-vlh-vz{opacity:0.2;}.cls-6-vlh-vz{opacity:0.4;}.cls-7-vlh-vz,.cls-8-vlh-vz{stroke:\" + (props.theme == 1 ? \"white\" : \"black\") + \";stroke-miterlimit:10;}.cls-7-vlh-vz{stroke-width:0.25px;}.cls-8-vlh-vz{stroke-opacity:0.49;}\"), __jsx(\"clipPath\", {\n    id: \"clip-path-vlh-vz\",\n    transform: \"translate(60.15)\"\n  }, __jsx(\"path\", {\n    className: \"cls-1-vlh-vz\",\n    d: \"M97.89,131.23a45.2,45.2,0,0,1-90.4,0c0-25,45.2-112.92,45.2-112.92S97.89,106.27,97.89,131.23Z\"\n  }))), __jsx(\"title\", null, \"Datov\\xFD zdroj 34\"), __jsx(\"g\", {\n    id: \"Vrstva_2\",\n    \"data-name\": \"Vrstva 2\"\n  }, __jsx(\"g\", {\n    id: \"Vrstva_2-2\",\n    \"data-name\": \"Vrstva 2\"\n  }, __jsx(\"text\", {\n    className: \"cls-2-vlh-vz\",\n    ref: percentageText,\n    transform: \"translate(168.67 92.37)\"\n  }, \"20%\"), __jsx(\"g\", {\n    className: \"cls-3-vlh-vz\"\n  }, __jsx(\"path\", {\n    className: \"cls-4-vlh-vz\",\n    ref: percentageLevel,\n    d: \"M107.87,130V178H-2.5V130Z\",\n    transform: \"translate(60.15)\"\n  }), __jsx(\"path\", {\n    className: \"cls-5-vlh-vz\",\n    ref: wave1,\n    d: \"M-60.15,119.12C-50,117.26-33.65,115.07-22.6,106c8.67-7.15,39.09,15,64.25,2.33,16.79-8.48,29.88,7.41,49.55-2.71,21.4-11,26.09,9.28,50.31,5.13,13.61-2.33,18-.34,24,8.42v92.12H-60.15Z\",\n    transform: \"translate(60.15)\"\n  }), __jsx(\"path\", {\n    className: \"cls-6-vlh-vz\",\n    ref: wave2,\n    d: \"M-60.15,130.57c10.16-1.46,18.58-3.63,27.06-13.73,8.21-9.78,26.9,11.07,52.65-.63,19.47-8.84,22.05,5,40.11,1.79,14.11-2.54,31.12-4.79,38.47,1.54s15.27-3.27,21.14-2.38c20.72,3.12,16.17-3,31.36-7.92,13.05-4.26,8.85,14.4,14.89,21.33v73H-60.15Z\",\n    transform: \"translate(60.15)\"\n  }), __jsx(\"line\", {\n    ref: percentageLine,\n    className: \"cls-7-vlh-vz\",\n    x1: \"60.65\",\n    y1: \"94.6\",\n    x2: \"192.78\",\n    y2: \"94.6\"\n  })), __jsx(\"path\", {\n    className: \"cls-8-vlh-vz\",\n    d: \"M104.87,131.47a52.19,52.19,0,0,1-104.37,0C.5,102.64,52.69,1.09,52.69,1.09S104.87,102.64,104.87,131.47Z\",\n    transform: \"translate(60.15)\"\n  }), __jsx(\"line\", {\n    ref: percentageLine2,\n    \"data-name\": \"Percentage-line\",\n    className: \"cls-7-vlh-vz\",\n    x1: \"112.84\",\n    y1: \"94.6\",\n    x2: \"192.78\",\n    y2: \"94.6\"\n  })))));\n};\n\nexport default AirHumidity;","map":null,"metadata":{},"sourceType":"module"}