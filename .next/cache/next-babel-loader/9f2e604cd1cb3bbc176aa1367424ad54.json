{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\components\\\\WithAuth.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport router from 'next/router';\nimport { auth } from '../firebase/index';\nimport Loading from \"./Loading\";\n\nconst withAuth = Component => {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        status: 'LOADING'\n      };\n    }\n\n    componentDidMount() {\n      auth.onAuthStateChanged(authUser => {\n        if (authUser) {\n          this.setState({\n            status: 'SIGNED_IN'\n          });\n        } else {\n          router.push('/login');\n        }\n      });\n    }\n\n    renderContent() {\n      // @ts-ignore\n      const {\n        status\n      } = this.state;\n\n      if (status == 'LOADING') {\n        return __jsx(\"div\", {\n          style: {\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, __jsx(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }));\n      } else if (status == 'SIGNED_IN') {// @ts-ignore\n        //return <Component user={auth.currentUser.uid} { ...this.props } />\n      }\n    }\n\n    render() {\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.renderContent());\n    }\n\n  };\n};\n\nexport default withAuth;","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/components/WithAuth.tsx"],"names":["React","router","auth","Loading","withAuth","Component","constructor","props","state","status","componentDidMount","onAuthStateChanged","authUser","setState","push","renderContent","position","width","height","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAyD,OAAzD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,QAAQ,GAAIC,SAAD,IAAwC;AACrD,SAAO,cAAcL,KAAK,CAACK,SAApB,CAA8B;AACjCC,IAAAA,WAAW,CAACC,KAAD,EAAY;AACnB,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,MAAM,EAAE;AADC,OAAb;AAGH;;AACDC,IAAAA,iBAAiB,GAAG;AAChBR,MAAAA,IAAI,CAACS,kBAAL,CAAwBC,QAAQ,IAAI;AAChC,YAAGA,QAAH,EAAa;AACT,eAAKC,QAAL,CAAc;AACVJ,YAAAA,MAAM,EAAE;AADE,WAAd;AAGH,SAJD,MAIM;AACFR,UAAAA,MAAM,CAACa,IAAP,CAAY,QAAZ;AACH;AACJ,OARD;AASH;;AACDC,IAAAA,aAAa,GAAG;AACZ;AACA,YAAM;AAAEN,QAAAA;AAAF,UAAa,KAAKD,KAAxB;;AACA,UAAGC,MAAM,IAAI,SAAb,EAAwB;AACpB,eAAO;AAAK,UAAA,KAAK,EAAE;AAACO,YAAAA,QAAQ,EAAC,UAAV;AAAqBC,YAAAA,KAAK,EAAC,MAA3B;AAAkCC,YAAAA,MAAM,EAAC;AAAzC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8D,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA9D,CAAP;AACH,OAFD,MAEM,IAAGT,MAAM,IAAI,WAAb,EAA0B,CAC5B;AACA;AACH;AACJ;;AACDU,IAAAA,MAAM,GAAG;AACL,aACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,aAAL,EADL,CADJ;AAKH;;AAlCgC,GAArC;AAoCH,CArCD;;AAsCA,eAAeX,QAAf","sourcesContent":["import React, {ReactComponentElement, ReactElement} from 'react';\r\nimport router from 'next/router';\r\nimport { auth } from '../firebase/index';\r\nimport Loading from \"./Loading\";\r\nimport {namedTypes} from \"ast-types\";\r\n\r\nconst withAuth = (Component:React.ComponentType<any>) => {\r\n    return class extends React.Component {\r\n        constructor(props:any) {\r\n            super(props);\r\n            this.state = {\r\n                status: 'LOADING',\r\n            };\r\n        }\r\n        componentDidMount() {\r\n            auth.onAuthStateChanged(authUser => {\r\n                if(authUser) {\r\n                    this.setState({\r\n                        status: 'SIGNED_IN'\r\n                    });\r\n                }else {\r\n                    router.push('/login');\r\n                }\r\n            });\r\n        }\r\n        renderContent() {\r\n            // @ts-ignore\r\n            const { status } = this.state;\r\n            if(status == 'LOADING') {\r\n                return <div style={{position:\"absolute\",width:\"100%\",height:\"100%\"}}><Loading/></div>;\r\n            }else if(status == 'SIGNED_IN') {\r\n                // @ts-ignore\r\n                //return <Component user={auth.currentUser.uid} { ...this.props } />\r\n            }\r\n        }\r\n        render() {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.renderContent()}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    };\r\n}\r\nexport default withAuth;"]},"metadata":{},"sourceType":"module"}