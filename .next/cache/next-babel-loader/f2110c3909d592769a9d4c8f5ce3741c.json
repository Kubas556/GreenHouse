{"ast":null,"code":"var __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { useEffect, useState } from \"react\";\nimport fetch from \"node-fetch\";\nimport useSWR from \"swr\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { TableHead, TableCell, TableContainer, TableBody, Paper, TableRow, Table, IconButton, Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    table: {\n      padding: \"5%\"\n    },\n    addButton: {\n      position: \"relative\",\n      margin: theme.spacing(2)\n    }\n  };\n});\n\nfunction Lide(props) {\n  var _useState = useState([]),\n      tableData = _useState[0],\n      setTableData = _useState[1];\n\n  var classes = useStyles();\n  var order = props.query.order;\n  var router = useRouter();\n  var edit = props.edit;\n\n  function checkStatus(res) {\n    if (res.ok) {\n      // res.status >= 200 && res.status < 300\n      return res;\n    } else {\n      return {\n        json: function json() {\n          return {\n            error: res.status\n          };\n        }\n      };\n    }\n  }\n  /*const fetcher = async (path) => {\r\n      const data = await fetch(path,{method:'GET',headers: {AUTHTOKEN: props.session}}).then(checkStatus);\r\n      const json = await data.json();\r\n        return json;\r\n  };*/\n\n\n  var fetchdata;\n  /*let requestData = (order=undefined) => {\r\n      let orderstring = \"\";\r\n      if(order!==undefined)\r\n          orderstring = \"?order=\"+order;\r\n        const {data, error} = useSWR('http://localhost:3000/api/getpeople'+orderstring, fetcher)\r\n      fetchdata = data;\r\n      fetcherror = error;\r\n  }*/\n  //requestData(order);\n\n  useEffect(function () {\n    if (props.session == null) router.push(\"/login\");\n    var orderstring = \"\";\n    if (order !== undefined) orderstring = \"?order=\" + order;\n    fetch(\"http://a2017sedlja.delta-studenti.cz/projektAPI/lide.php\" + orderstring, {\n      method: 'GET',\n      headers: {\n        AUTHTOKEN: props.session\n      }\n    }).then(checkStatus).then(function (d) {\n      return d.json();\n    }).then(function (j) {\n      fetchdata = j;\n\n      if (!fetchdata) {//setTableData([\"loading\"]);\n      } else if (fetchdata.error) {//setTableData([{0:fetchdata.error}]);\n      } else {\n        setTableData(fetchdata);\n      }\n    });\n  }, [props.session, props.query.order]);\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.table\n  }, __jsx(TableContainer, {\n    component: Paper\n  }, __jsx(Table, null, __jsx(TableHead, null, __jsx(TableCell, null, \"ID\"), __jsx(Link, {\n    href: {\n      pathname: '/lide',\n      query: {\n        order: order === \"name_asc\" ? \"name_desc\" : \"name_asc\"\n      }\n    }\n  }, __jsx(TableCell, {\n    align: \"right\"\n  }, \"Jm\\xE9no\")), __jsx(Link, {\n    href: {\n      pathname: '/lide',\n      query: {\n        order: order === \"phone_asc\" ? \"phone_desc\" : \"phone_asc\"\n      }\n    }\n  }, __jsx(TableCell, {\n    align: \"right\"\n  }, \"Telefon\")), __jsx(Link, {\n    href: {\n      pathname: '/lide',\n      query: {\n        order: order === \"pos_asc\" ? \"pos_desc\" : \"pos_asc\"\n      }\n    }\n  }, __jsx(TableCell, {\n    align: \"right\"\n  }, \"Pozice\")), __jsx(Link, {\n    href: {\n      pathname: '/lide',\n      query: {\n        order: order === \"room_asc\" ? \"room_desc\" : \"room_asc\"\n      }\n    }\n  }, __jsx(TableCell, {\n    align: \"right\"\n  }, \"M\\xEDstnost\"))), __jsx(TableBody, null, tableData.map(function (row) {\n    return __jsx(TableRow, null, __jsx(TableCell, null, row[5]), __jsx(TableCell, {\n      align: \"right\"\n    }, row[0] + \" \" + row[1]), __jsx(TableCell, {\n      align: \"right\"\n    }, row[4]), __jsx(TableCell, {\n      align: \"right\"\n    }, row[2]), __jsx(TableCell, {\n      align: \"right\"\n    }, row[3]), props.edit == 1 ? __jsx(TableCell, {\n      padding: \"checkbox\"\n    }, __jsx(Link, {\n      href: \"/editPerson?id=\" + row[5]\n    }, __jsx(IconButton, {\n      color: \"secondary\",\n      \"aria-label\": \"edit\"\n    }, __jsx(EditIcon, null)))) : null);\n  })))), props.edit == 1 ? __jsx(Link, {\n    href: \"/addPerson\"\n  }, __jsx(Fab, {\n    color: \"primary\",\n    className: classes.addButton,\n    \"aria-label\": \"add\"\n  }, __jsx(AddIcon, null))) : null), __jsx(\"p\", null, \"Hello Next.js\"));\n}\n\nLide.getInitialProps = function (_ref) {\n  var query = _ref.query;\n  return {\n    query: query\n  };\n};\n\nexport default Lide;","map":null,"metadata":{},"sourceType":"module"}