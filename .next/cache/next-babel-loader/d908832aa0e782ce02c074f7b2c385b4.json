{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\pages\\\\irrigation\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport withAuth from \"../../components/WithAuth\";\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\nimport { firebase } from \"../../firebase/index\";\nimport { Line } from \"react-chartjs-2\";\nimport onlyDesktop from \"../../components/OnlyDesktop\";\nimport SoilHumidity from \"../../components/SoilHumidity\";\nconst useStyle = makeStyles(theme => ({\n  center: {\n    display: 'flex'\n  },\n  controllComponent: {\n    margin: '50px',\n    width: 'min-content',\n    padding: '1rem'\n  }\n}));\n\nfunction Id(props) {\n  const classes = useStyle();\n  const {\n    0: soilHumidity,\n    1: setSoilHumidity\n  } = useState(0);\n  const {\n    0: tempHistoryCharData,\n    1: setTempHistoryCharData\n  } = useState();\n  const {\n    0: tempHistoryCharLabels,\n    1: setTempHistoryCharLabels\n  } = useState();\n  const {\n    0: defTemp,\n    1: setDefTemp\n  } = useState();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const timeFormat = 'MM/DD/YYYY HH:mm';\n  let soilHumidityData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/soilHumidity\");\n  let humidityHistoryData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/humiditys\"); //let targetTempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\");\n\n  const termostatChange = value => {\n    firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\").set(value);\n  };\n\n  useEffect(() => {\n    soilHumidityData.on('value', data => {\n      setSoilHumidity(data.val());\n    });\n    /*humidityHistoryData.on('value',data=>{\r\n        let charData:any[] = [];\r\n        let charLabels:any[] = [];\r\n        Object.keys(data.val()).forEach(key => {\r\n            charData.push(data.val()[key].temp);\r\n            charLabels.push(data.val()[key].time[1]+'/'+data.val()[key].time[2]+'/'+data.val()[key].time[0]+' '+data.val()[key].time[3]+':'+data.val()[key].time[4])\r\n        });\r\n          setTempHistoryCharData(charData);\r\n        setTempHistoryCharLabels(charLabels);\r\n    });*/\n\n    /*targetTempData.once('value',data=>{\r\n        setDefTemp(data.val());\r\n    });*/\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Zavla\\u017Eov\\xE1n\\xED\"), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(SoilHumidity, {\n    theme: props.theme,\n    value: soilHumidity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    style: {\n      width: 'calc(100% - 100px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(Line, {\n    data: {\n      labels: tempHistoryCharLabels,\n      datasets: [{\n        label: 'temp',\n        data: tempHistoryCharData,\n        backgroundColor: 'rgba(0,0,0,0)',\n        pointBackgroundColor: 'red',\n        borderColor: 'red',\n        borderWidth: 0\n      }]\n    },\n    options: {\n      scales: {\n        xAxes: [{\n          gridLines: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          gridLines: {\n            color: props.theme == 1 ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            zeroLineColor: props.theme == 1 ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            drawTicks: false\n          },\n          ticks: {\n            stepSize: 10,\n            padding: 10\n          }\n        }]\n      },\n      maintainAspectRatio: false\n      /*xAxes:[{\r\n        }]*/\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })))));\n}\n\nfunction ex(props) {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  let nameData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/name\");\n  useEffect(() => {\n    nameData.on('value', data => {\n      setName(data.val());\n    });\n  }, []);\n  return __jsx(WithDrawerAppBar, {\n    component: Id,\n    title: name,\n    deviceId: id.toString(),\n    componentProps: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  });\n}\n\nexport default onlyDesktop(withAuth(ex));","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/pages/irrigation/[id].tsx"],"names":["makeStyles","React","useEffect","useState","useRouter","Typography","Paper","withAuth","WithDrawerAppBar","firebase","Line","onlyDesktop","SoilHumidity","useStyle","theme","center","display","controllComponent","margin","width","padding","Id","props","classes","soilHumidity","setSoilHumidity","tempHistoryCharData","setTempHistoryCharData","tempHistoryCharLabels","setTempHistoryCharLabels","defTemp","setDefTemp","router","id","query","timeFormat","soilHumidityData","database","ref","user","humidityHistoryData","termostatChange","value","set","on","data","val","labels","datasets","label","backgroundColor","pointBackgroundColor","borderColor","borderWidth","scales","xAxes","gridLines","yAxes","color","zeroLineColor","drawTicks","ticks","stepSize","maintainAspectRatio","ex","name","setName","nameData","toString"],"mappings":";;AAGA,SAAwBA,UAAxB,QAAwD,0BAAxD;AAEA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,UAAR,EAAmBC,KAAnB,QAA+B,mBAA/B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AAGA,SAAcC,QAAd,QAA6B,sBAA7B;AAIA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAIA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,QAAQ,GAAGb,UAAU,CAACc,KAAK,KAAG;AAChCC,EAAAA,MAAM,EAAC;AACHC,IAAAA,OAAO,EAAC;AADL,GADyB;AAIhCC,EAAAA,iBAAiB,EAAC;AACdC,IAAAA,MAAM,EAAC,MADO;AAEdC,IAAAA,KAAK,EAAC,aAFQ;AAGdC,IAAAA,OAAO,EAAC;AAHM;AAJc,CAAH,CAAN,CAA3B;;AAWA,SAASC,EAAT,CAAYC,KAAZ,EAA8B;AAC1B,QAAMC,OAAO,GAAGV,QAAQ,EAAxB;AACA,QAAM;AAAA,OAACW,YAAD;AAAA,OAAcC;AAAd,MAAiCtB,QAAQ,CAAS,CAAT,CAA/C;AACA,QAAM;AAAA,OAACuB,mBAAD;AAAA,OAAqBC;AAArB,MAA+CxB,QAAQ,EAA7D;AACA,QAAM;AAAA,OAACyB,qBAAD;AAAA,OAAuBC;AAAvB,MAAmD1B,QAAQ,EAAjE;AACA,QAAM;AAAA,OAAC2B,OAAD;AAAA,OAASC;AAAT,MAAuB5B,QAAQ,EAArC;AACA,QAAM6B,MAAM,GAAG5B,SAAS,EAAxB;AACA,QAAM;AAAE6B,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAMC,UAAU,GAAG,kBAAnB;AAGA,MAAIC,gBAAgB,GAAG3B,QAAQ,CAAC4B,QAAT,GAAoBC,GAApB,CAAwB,YAAUhB,KAAK,CAACiB,IAAhB,GAAqB,WAArB,GAAiCN,EAAjC,GAAoC,eAA5D,CAAvB;AACA,MAAIO,mBAAmB,GAAG/B,QAAQ,CAAC4B,QAAT,GAAoBC,GAApB,CAAwB,YAAUhB,KAAK,CAACiB,IAAhB,GAAqB,WAArB,GAAiCN,EAAjC,GAAoC,YAA5D,CAA1B,CAZ0B,CAa1B;;AAEA,QAAMQ,eAAe,GAAIC,KAAD,IAAkB;AACtCjC,IAAAA,QAAQ,CAAC4B,QAAT,GAAoBC,GAApB,CAAwB,YAAUhB,KAAK,CAACiB,IAAhB,GAAqB,WAArB,GAAiCN,EAAjC,GAAoC,aAA5D,EAA2EU,GAA3E,CAA+ED,KAA/E;AACH,GAFD;;AAIAxC,EAAAA,SAAS,CAAC,MAAI;AACVkC,IAAAA,gBAAgB,CAACQ,EAAjB,CAAoB,OAApB,EAA4BC,IAAI,IAAE;AAC9BpB,MAAAA,eAAe,CAACoB,IAAI,CAACC,GAAL,EAAD,CAAf;AACH,KAFD;AAIA;;;;;;;;;;;AAYA;;;AAIH,GArBQ,EAqBP,EArBO,CAAT;AAuBH,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAII;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACR,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEQ,OAAO,CAACN,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,KAAK,EAAE;AAACG,MAAAA,OAAO,EAAE;AAAV,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEE,KAAK,CAACR,KAA3B;AAAkC,IAAA,KAAK,EAAEU,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACN,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,KAAK,EAAE;AAACG,MAAAA,OAAO,EAAE;AAAV,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CAJJ,EAgBI;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACR,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAEQ,OAAO,CAACN,iBAAxB;AAA2C,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAC;AAAP,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACR4B,MAAAA,MAAM,EAACnB,qBADC;AAERoB,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,MADA;AAEPJ,QAAAA,IAAI,EAAEnB,mBAFC;AAGPwB,QAAAA,eAAe,EAAE,eAHV;AAIPC,QAAAA,oBAAoB,EAAE,KAJf;AAKPC,QAAAA,WAAW,EAAE,KALN;AAMPC,QAAAA,WAAW,EAAE;AANN,OAAD;AAFF,KAAZ;AAUG,IAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAC;AACHC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,SAAS,EAAE;AACPxC,YAAAA,OAAO,EAAE;AADF;AADP,SAAD,CADJ;AAMHyC,QAAAA,KAAK,EAAE,CAAC;AACJD,UAAAA,SAAS,EAAE;AACPE,YAAAA,KAAK,EAACpC,KAAK,CAACR,KAAN,IAAa,CAAb,GAAe,uBAAf,GAAuC,iBADtC;AAEP6C,YAAAA,aAAa,EAACrC,KAAK,CAACR,KAAN,IAAa,CAAb,GAAe,uBAAf,GAAuC,iBAF9C;AAGP8C,YAAAA,SAAS,EAAC;AAHH,WADP;AAMJC,UAAAA,KAAK,EAAE;AACHC,YAAAA,QAAQ,EAAE,EADP;AAEH1C,YAAAA,OAAO,EAAC;AAFL;AANH,SAAD;AANJ,OADC;AAmBR2C,MAAAA,mBAAmB,EAAE;AACrB;;;AApBQ,KAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADH,CAhBJ,CADJ;AA2DA;;AAED,SAASC,EAAT,CAAY1C,KAAZ,EAA8B;AAC1B,QAAMU,MAAM,GAAG5B,SAAS,EAAxB;AACA,QAAM;AAAE6B,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAA,OAAC+B,IAAD;AAAA,OAAMC;AAAN,MAAiB/D,QAAQ,CAAC,EAAD,CAA/B;AACA,MAAIgE,QAAQ,GAAG1D,QAAQ,CAAC4B,QAAT,GAAoBC,GAApB,CAAwB,YAAUhB,KAAK,CAACiB,IAAhB,GAAqB,WAArB,GAAiCN,EAAjC,GAAoC,OAA5D,CAAf;AACA/B,EAAAA,SAAS,CAAC,MAAI;AACViE,IAAAA,QAAQ,CAACvB,EAAT,CAAY,OAAZ,EAAoBC,IAAI,IAAE;AACtBqB,MAAAA,OAAO,CAACrB,IAAI,CAACC,GAAL,EAAD,CAAP;AACH,KAFD;AAGH,GAJQ,EAIP,EAJO,CAAT;AAKA,SACI,MAAC,gBAAD;AAAkB,IAAA,SAAS,EAAEzB,EAA7B;AAAiC,IAAA,KAAK,EAAE4C,IAAxC;AAA8C,IAAA,QAAQ,EAAEhC,EAAE,CAACmC,QAAH,EAAxD;AAAuE,IAAA,cAAc,EAAE9C,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AAED,eAAeX,WAAW,CAACJ,QAAQ,CAACyD,EAAD,CAAT,CAA1B","sourcesContent":["import Link from \"next/link\";\r\nimport useSWR from 'swr';\r\nimport {DatePicker,MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {orange} from \"@material-ui/core/colors\";\r\nimport {useRouter} from \"next/router\";\r\nimport {Typography,Paper} from \"@material-ui/core\";\r\nimport withAuth from \"../../components/WithAuth\";\r\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\r\nimport Tempmeter from \"../../components/Tempmeter\";\r\nimport Termostat from \"../../components/Termostat\";\r\nimport {auth, firebase} from \"../../firebase/index\";\r\nimport IPageProps from \"../../interfaces/IPageProps\";\r\nimport Loading from \"../../components/Loading\";\r\nimport {object, string} from \"prop-types\";\r\nimport {Line} from \"react-chartjs-2\";\r\nimport onlyDesktop from \"../../components/OnlyDesktop\";\r\nimport FireBackground from \"../../components/FireBackground\";\r\nimport {width} from \"@material-ui/system\";\r\nimport {url} from \"inspector\";\r\nimport SoilHumidity from \"../../components/SoilHumidity\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    center:{\r\n        display:'flex'\r\n    },\r\n    controllComponent:{\r\n        margin:'50px',\r\n        width:'min-content',\r\n        padding:'1rem'\r\n    }\r\n}));\r\n\r\nfunction Id(props:IPageProps) {\r\n    const classes = useStyle();\r\n    const [soilHumidity,setSoilHumidity] = useState<number>(0);\r\n    const [tempHistoryCharData,setTempHistoryCharData] = useState<any>();\r\n    const [tempHistoryCharLabels,setTempHistoryCharLabels] = useState<any>();\r\n    const [defTemp,setDefTemp] = useState<number>();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const timeFormat = 'MM/DD/YYYY HH:mm';\r\n\r\n\r\n    let soilHumidityData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/soilHumidity\");\r\n    let humidityHistoryData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/humiditys\");\r\n    //let targetTempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\");\r\n\r\n    const termostatChange = (value:number) => {\r\n        firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\").set(value);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        soilHumidityData.on('value',data=>{\r\n            setSoilHumidity(data.val());\r\n        });\r\n\r\n        /*humidityHistoryData.on('value',data=>{\r\n            let charData:any[] = [];\r\n            let charLabels:any[] = [];\r\n            Object.keys(data.val()).forEach(key => {\r\n                charData.push(data.val()[key].temp);\r\n                charLabels.push(data.val()[key].time[1]+'/'+data.val()[key].time[2]+'/'+data.val()[key].time[0]+' '+data.val()[key].time[3]+':'+data.val()[key].time[4])\r\n            });\r\n\r\n            setTempHistoryCharData(charData);\r\n            setTempHistoryCharLabels(charLabels);\r\n        });*/\r\n\r\n        /*targetTempData.once('value',data=>{\r\n            setDefTemp(data.val());\r\n        });*/\r\n\r\n    },[]);\r\n\r\n return(\r\n     <div>\r\n         <Typography component={\"h1\"} variant={\"h2\"}>\r\n             Zavlažování\r\n         </Typography>\r\n         <div className={classes.center}>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n                     <SoilHumidity theme={props.theme} value={soilHumidity}/>\r\n                 </Paper>\r\n             </div>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n\r\n                 </Paper>\r\n             </div>\r\n         </div>\r\n         <div className={classes.center}>\r\n            <div className={classes.controllComponent} style={{width:'calc(100% - 100px)'}}>\r\n                <Paper>\r\n                    <Line data={{\r\n                        labels:tempHistoryCharLabels,\r\n                        datasets: [{\r\n                            label: 'temp',\r\n                            data: tempHistoryCharData,\r\n                            backgroundColor: 'rgba(0,0,0,0)',\r\n                            pointBackgroundColor: 'red',\r\n                            borderColor: 'red',\r\n                            borderWidth: 0\r\n                        }]\r\n                    }} options={{\r\n                        scales:{\r\n                            xAxes: [{\r\n                                gridLines: {\r\n                                    display: false,\r\n                                },\r\n                            }],\r\n                            yAxes: [{\r\n                                gridLines: {\r\n                                    color:props.theme==1?'rgba(255,255,255,0.1)':'rgba(0,0,0,0.1)',\r\n                                    zeroLineColor:props.theme==1?'rgba(255,255,255,0.1)':'rgba(0,0,0,0.1)',\r\n                                    drawTicks:false,\r\n                                },\r\n                                ticks: {\r\n                                    stepSize: 10,\r\n                                    padding:10\r\n                                }\r\n                            }],\r\n                        },\r\n                        maintainAspectRatio: false,\r\n                        /*xAxes:[{\r\n\r\n                        }]*/\r\n                    }}/>\r\n                </Paper>\r\n            </div>\r\n         </div>\r\n     </div>\r\n )\r\n}\r\n\r\nfunction ex(props:IPageProps) {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const [name,setName] = useState(\"\");\r\n    let nameData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/name\");\r\n    useEffect(()=>{\r\n        nameData.on('value',data=>{\r\n            setName(data.val());\r\n        });\r\n    },[]);\r\n    return(\r\n        <WithDrawerAppBar component={Id} title={name} deviceId={id.toString()} componentProps={props}/>\r\n    )\r\n}\r\n\r\nexport default onlyDesktop(withAuth(ex));"]},"metadata":{},"sourceType":"module"}