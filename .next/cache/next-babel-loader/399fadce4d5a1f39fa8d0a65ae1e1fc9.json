{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider, makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { lightTheme, darkTheme } from '../components/Theme';\nimport CustomAppBar from \"../components/CustomAppBar\";\nimport { Switch, FormControlLabel, Box, Divider, Drawer, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { auth } from '../firebase/index';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function MyApp(props) {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(false);\n  const {\n    0: showBtn,\n    1: setShowBtn\n  } = useState(true);\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const themeReg = /theme=(\\w+)/;\n  const classes = useTheme();\n  const router = useRouter();\n  useEffect(() => {\n    const themeCookie = document.cookie.match(themeReg);\n    if (themeCookie) setTheme(JSON.parse(themeCookie[1])); // Remove the server-side injected CSS.\n\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n\n  const switchTheme = () => {\n    document.cookie = 'theme=' + !theme;\n    setTheme(!theme);\n  };\n\n  function toggleThemeSwitch(value) {\n    setShowBtn(value);\n  }\n\n  ;\n  const {\n    Component,\n    pageProps\n  } = props;\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), __jsx(ThemeProvider, {\n    theme: theme ? darkTheme : lightTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, showBtn ? __jsx(CustomAppBar, {\n    handleDrawerOpen: handleDrawerOpen,\n    text: \"Some name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }) : null, __jsx(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, {\n      [classes.drawerOpen]: open,\n      [classes.drawerClose]: !open\n    }),\n    classes: {\n      paper: clsx({\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? __jsx(ChevronRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }) : __jsx(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }))), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => __jsx(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, index % 2 === 0 ? __jsx(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }) : __jsx(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })))), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, ['All mail', 'Trash', 'Spam'].map((text, index) => __jsx(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, index % 2 === 0 ? __jsx(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }) : __jsx(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }))))), __jsx(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), __jsx(Box, {\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    theme: theme,\n    setThemeBtn: toggleThemeSwitch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }))))), showBtn ? __jsx(FormControlLabel, {\n    labelPlacement: \"start\",\n    label: \"Dark mode\",\n    control: __jsx(Switch, {\n      checked: theme,\n      onChange: switchTheme.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }) : null));\n}","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP/pages/_app.js"],"names":["React","useEffect","useState","App","Head","useRouter","ThemeProvider","makeStyles","useTheme","CssBaseline","lightTheme","darkTheme","CustomAppBar","Switch","FormControlLabel","Box","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","auth","useStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","drawerWidth","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MyApp","props","setTheme","showBtn","setShowBtn","open","setOpen","handleDrawerOpen","handleDrawerClose","themeReg","classes","router","themeCookie","document","cookie","match","JSON","parse","jssStyles","querySelector","parentElement","removeChild","switchTheme","toggleThemeSwitch","value","Component","pageProps","clsx","paper","direction","map","text","index","bind"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport App from 'next/app';\r\nimport Head from 'next/head';\r\nimport {useRouter} from 'next/router';\r\nimport { ThemeProvider,makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {lightTheme,darkTheme} from '../components/Theme';\r\nimport CustomAppBar from \"../components/CustomAppBar\";\r\nimport {Switch,FormControlLabel,Box,Divider,Drawer,List,ListItem,ListItemIcon,ListItemText} from \"@material-ui/core\";\r\nimport {auth} from '../firebase/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function MyApp (props) {\r\n\r\n        const [theme,setTheme] = useState(false);\r\n        const [showBtn,setShowBtn] = useState(true);\r\n        const [open, setOpen] = React.useState(false);\r\n\r\n        const handleDrawerOpen = () => {\r\n            setOpen(true);\r\n        };\r\n\r\n        const handleDrawerClose = () => {\r\n            setOpen(false);\r\n        };\r\n\r\n        const themeReg = /theme=(\\w+)/;\r\n        const classes = useTheme();\r\n        const router = useRouter();\r\n\r\n    useEffect(()=> {\r\n        const themeCookie = document.cookie.match(themeReg);\r\n\r\n        if(themeCookie)\r\n            setTheme(JSON.parse(themeCookie[1]));\r\n\r\n        // Remove the server-side injected CSS.\r\n        const jssStyles = document.querySelector('#jss-server-side');\r\n        if (jssStyles) {\r\n            jssStyles.parentElement.removeChild(jssStyles);\r\n        }\r\n    },[]);\r\n\r\n    const switchTheme = () => {\r\n        document.cookie = 'theme='+(!theme);\r\n        setTheme(!theme);\r\n    };\r\n\r\n    function toggleThemeSwitch(value) {\r\n        setShowBtn(value);\r\n    };\r\n\r\n    const { Component, pageProps } = props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>My page</title>\r\n                    <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n                </Head>\r\n                <ThemeProvider theme={theme?darkTheme:lightTheme}>\r\n                    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n                    {/*<div style={\r\n                        {display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        height: \"100vh\"}\r\n                    }>*/}\r\n                    <CssBaseline />\r\n                    <div className={classes.root}>\r\n                    {showBtn?<CustomAppBar handleDrawerOpen={handleDrawerOpen} text={\"Some name\"}/>:null}\r\n                        <Drawer variant=\"permanent\" className={clsx(classes.drawer, {\r\n                            [classes.drawerOpen]: open,\r\n                            [classes.drawerClose]: !open,\r\n                        })}\r\n                                classes={{\r\n                                    paper: clsx({\r\n                                        [classes.drawerOpen]: open,\r\n                                        [classes.drawerClose]: !open,\r\n                                    }),\r\n                                }}>\r\n                            <div className={classes.toolbar}>\r\n                                <IconButton onClick={handleDrawerClose}>\r\n                                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                                </IconButton>\r\n                            </div>\r\n                            <Divider />\r\n                            <List>\r\n                                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                                    <ListItem button key={text}>\r\n                                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                        <ListItemText primary={text} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                            <Divider />\r\n                            <List>\r\n                                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                                    <ListItem button key={text}>\r\n                                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                        <ListItemText primary={text} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </Drawer>\r\n                        <main className={classes.content}>\r\n                            <div className={classes.toolbar} />\r\n                            <Box height={\"100%\"}>\r\n                                <Component {...pageProps} theme={theme} setThemeBtn={toggleThemeSwitch} />\r\n                            </Box>\r\n                        </main>\r\n                    </div>\r\n                    {showBtn?\r\n                        <FormControlLabel labelPlacement={\"start\"} label={\"Dark mode\"} control={<Switch checked={theme} onChange={switchTheme.bind(this)}/>}/>\r\n                        :null}\r\n                    {/*</div>*/}\r\n\r\n                </ThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}