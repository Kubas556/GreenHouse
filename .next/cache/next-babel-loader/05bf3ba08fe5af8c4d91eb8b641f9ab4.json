{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\pages\\\\temperature\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport withAuth from \"../../components/WithAuth\";\nimport WithAppBar from \"../../components/WithAppBar\";\nimport Tempmeter from \"../../components/Tempmeter\";\nimport Termostat from \"../../components/Termostat\";\nimport { firebase } from \"../../firebase/index\";\nconst useStyle = makeStyles(theme => ({\n  center: {\n    display: 'flex'\n  },\n  tempmeter: {\n    margin: '50px',\n    padding: '1rem'\n  }\n}));\n\nfunction Id(props) {\n  const classes = useStyle();\n  const {\n    0: temp,\n    1: setTemp\n  } = useState(-50);\n  const {\n    0: targetTemp,\n    1: setTargetTemp\n  } = useState(0);\n  const {\n    0: content,\n    1: setContent\n  } = useState(__jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"loading\"));\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  let tempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/temp\");\n  let targetTempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\");\n\n  const termostatChange = value => {\n    firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\").set(value);\n  };\n\n  useEffect(() => {\n    tempData.on('value', data => {\n      setTemp(data.val());\n    });\n    tempData.once('value', data => {\n      setTargetTemp(data.val());\n    });\n  }, []);\n  useEffect(() => {\n    if (targetTemp != undefined) {\n      setContent(__jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(Typography, {\n        component: \"h1\",\n        variant: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Teplota\"), __jsx(\"div\", {\n        className: classes.center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: classes.tempmeter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(Paper, {\n        elevation: 3,\n        style: {\n          padding: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(Tempmeter, {\n        theme: props.theme,\n        temp: temp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))), __jsx(Paper, {\n        elevation: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(Termostat, {\n        theme: props.theme,\n        onValueChanged: termostatChange,\n        defaultValue: targetTemp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })))));\n    }\n  }, [targetTemp]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Teplota\"), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.tempmeter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Tempmeter, {\n    theme: props.theme,\n    temp: temp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), __jsx(Paper, {\n    elevation: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Termostat, {\n    theme: props.theme,\n    onValueChanged: termostatChange,\n    defaultValue: targetTemp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))));\n}\n\nfunction ex(props) {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  let nameData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/name\");\n  useEffect(() => {\n    nameData.on('value', data => {\n      setName(data.val());\n    });\n  }, []);\n  return __jsx(WithAppBar, {\n    component: Id,\n    title: name,\n    componentProps: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  });\n}\n\nexport default withAuth(ex);","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/pages/temperature/[id].tsx"],"names":["makeStyles","React","useEffect","useState","useRouter","Typography","Paper","withAuth","WithAppBar","Tempmeter","Termostat","firebase","useStyle","theme","center","display","tempmeter","margin","padding","Id","props","classes","temp","setTemp","targetTemp","setTargetTemp","content","setContent","router","id","query","tempData","database","ref","user","targetTempData","termostatChange","value","set","on","data","val","once","undefined","ex","name","setName","nameData"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport useSWR from 'swr';\r\nimport {DatePicker,MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {orange} from \"@material-ui/core/colors\";\r\nimport {useRouter} from \"next/router\";\r\nimport {Typography,Paper} from \"@material-ui/core\";\r\nimport withAuth from \"../../components/WithAuth\";\r\nimport WithAppBar from \"../../components/WithAppBar\";\r\nimport Tempmeter from \"../../components/Tempmeter\";\r\nimport Termostat from \"../../components/Termostat\";\r\nimport {firebase} from \"../../firebase/index\";\r\nimport IPageProps from \"../../interfaces/IPageProps\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    center:{\r\n        display:'flex'\r\n    },\r\n    tempmeter:{\r\n        margin:'50px',\r\n        padding:'1rem'\r\n    }\r\n}));\r\n\r\nfunction Id(props:IPageProps) {\r\n    const classes = useStyle();\r\n    const [temp,setTemp] = useState(-50);\r\n    const [targetTemp,setTargetTemp] = useState(0);\r\n    const [content,setContent] = useState<JSX.Element>(<div>loading</div>);\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n\r\n    let tempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/temp\");\r\n    let targetTempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\");\r\n\r\n    const termostatChange = (value:string) => {\r\n        firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\").set(value);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        tempData.on('value',data=>{\r\n            setTemp(data.val());\r\n        });\r\n\r\n        tempData.once('value',data=>{\r\n            setTargetTemp(data.val());\r\n        });\r\n\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(targetTemp != undefined) {\r\n            setContent(\r\n                <div>\r\n                    <Typography component={\"h1\"} variant={\"h2\"}>\r\n                        Teplota\r\n                    </Typography>\r\n                    <div className={classes.center}>\r\n                        <div className={classes.tempmeter}>\r\n                            <Paper elevation={3} style={{padding: '1rem'}}>\r\n                                <Tempmeter theme={props.theme} temp={temp}/>\r\n                            </Paper>\r\n                        </div>\r\n                        <Paper elevation={3}>\r\n                            <Termostat theme={props.theme} onValueChanged={termostatChange} defaultValue={targetTemp}/>\r\n                        </Paper>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    },[targetTemp]);\r\n\r\n return(\r\n     <div>\r\n         <Typography component={\"h1\"} variant={\"h2\"}>\r\n             Teplota\r\n         </Typography>\r\n         <div className={classes.center}>\r\n             <div className={classes.tempmeter}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n                     <Tempmeter theme={props.theme} temp={temp}/>\r\n                 </Paper>\r\n             </div>\r\n             <Paper elevation={3}>\r\n                 <Termostat theme={props.theme} onValueChanged={termostatChange} defaultValue={targetTemp}/>\r\n             </Paper>\r\n         </div>\r\n     </div>\r\n )\r\n}\r\n\r\nfunction ex(props:IPageProps) {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const [name,setName] = useState(\"\");\r\n    let nameData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/name\");\r\n    useEffect(()=>{\r\n        nameData.on('value',data=>{\r\n            setName(data.val());\r\n        });\r\n    },[]);\r\n    return(\r\n        <WithAppBar component={Id} title={name} componentProps={props}/>\r\n    )\r\n}\r\n\r\nexport default withAuth(ex);"]},"metadata":{},"sourceType":"module"}