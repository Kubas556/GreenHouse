{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\components\\\\OnlyDesktop.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\n\nfunction OnlyDesktop(Component) {\n  const {\n    0: content,\n    1: setContent\n  } = useState();\n  const {\n    0: touchDisplay,\n    1: setTouchDisplay\n  } = useState(false);\n  useEffect(() => {\n    setTouchDisplay(navigator.maxTouchPoints === 1);\n  }, []);\n\n  let render = () => {\n    if (touchDisplay) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"unsuported\");\n    } else {\n      return Component;\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, render());\n}\n\nexport default OnlyDesktop;","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/components/OnlyDesktop.tsx"],"names":["React","useEffect","useState","OnlyDesktop","Component","content","setContent","touchDisplay","setTouchDisplay","navigator","maxTouchPoints","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAoDC,SAApD,EAA+DC,QAA/D,QAA8E,OAA9E;;AAGA,SAASC,WAAT,CAAqBC,SAArB,EAAyD;AACrD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBJ,QAAQ,EAAtC;AACA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,KAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACbO,IAAAA,eAAe,CAACC,SAAS,CAACC,cAAV,KAA2B,CAA5B,CAAf;AACF,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAIC,MAAM,GAAG,MAAM;AACf,QAAGJ,YAAH,EAAiB;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAEO;AACH,aAAOH,SAAP;AACH;AACJ,GAND;;AAQA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,MAAM,EADX,CADJ;AAKH;;AAED,eAAeR,WAAf","sourcesContent":["import React, {ReactComponentElement, ReactElement, useEffect, useState} from 'react';\r\nimport router from 'next/router';\r\n\r\nfunction OnlyDesktop(Component:React.ComponentType<any>) {\r\n    const [content, setContent] = useState();\r\n    const [touchDisplay, setTouchDisplay] = useState(false);\r\n\r\n    useEffect(() => {\r\n       setTouchDisplay(navigator.maxTouchPoints===1);\r\n    },[]);\r\n\r\n    let render = () => {\r\n        if(touchDisplay) {\r\n            return <div>unsuported</div>\r\n        } else {\r\n            return Component;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {render()}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default OnlyDesktop;"]},"metadata":{},"sourceType":"module"}