{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\nimport { Container, TextField, Grid, Paper, Button, Typography, Fab } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { auth } from '../firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport fetch from \"node-fetch\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { error } from \"next/dist/build/output/log\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    paddingTop: '1rem'\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2)\n  }\n}));\n\nfunction Login(props) {\n  const {\n    0: username,\n    1: setUsername\n  } = useState();\n  const {\n    0: password,\n    1: setPassword\n  } = useState();\n  const {\n    0: missingError,\n    1: setMissingError\n  } = useState(false);\n  const {\n    0: loginError,\n    1: setLoginError\n  } = useState(false);\n  const classes = useStyles();\n  const router = useRouter();\n  useEffect(() => {\n    /*if(props.session!==null && props.query.refresh!=='false')\r\n        router.back();*/\n  }, [props.session]);\n  useEffect(() => {\n    /*props.setThemeBtn(false);\r\n      return () => {\r\n        props.setThemeBtn(true);\r\n    }*/\n  }, []);\n\n  function checkStatus(res) {\n    if (res.ok) {\n      // res.status >= 200 && res.status < 300\n      return res;\n    } else {\n      if (res.status === 401) setLoginError(true);\n      throw error(res.status);\n    }\n  }\n\n  const submitForm = () => {\n    setLoginError(false);\n    setMissingError(false);\n\n    if (!username || !password) {\n      setMissingError(true);\n    } else {\n      fetch(\"http://a2017sedlja.delta-studenti.cz/projektAPI/validate.php\", {\n        method: \"POST\",\n        headers: {\n          USERNAME: username,\n          PASSWORD: password\n        }\n      }).then(checkStatus).then(r => r.json()).then(j => {\n        if (j.error) {\n          cosnole.log(j.error);\n        } else {\n          props.changeSess({\n            session: j[0],\n            edit: j[1]\n          });\n          router.push('/');\n        }\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      minHeight: '100vh',\n      position: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: e => {\n      e.preventDefault();\n      submitForm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classes.header,\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Login\"), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: !username && missingError || loginError,\n    fullWidth: true,\n    helperText: !username && missingError ? \"required\" : null,\n    variant: \"outlined\",\n    label: \"Username\",\n    type: \"text\",\n    onChange: e => {\n      setUsername(e.target.value);\n    },\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: !password && missingError || loginError,\n    fullWidth: true,\n    helperText: !password && missingError ? \"required\" : null,\n    variant: \"outlined\",\n    label: \"Password\",\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    id: \"submit-btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"submit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Login\")))))), props.session !== null ? __jsx(Fab, {\n    onClick: () => {\n      router.back();\n    },\n    variant: \"extended\",\n    color: \"secondary\",\n    className: classes.fab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(ArrowBackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), \"Back to app\") : null)));\n}\n\nLogin.getInitialProps = ({\n  query\n}) => {\n  return {\n    query: query\n  };\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP/pages/login.js"],"names":["Container","TextField","Grid","Paper","Button","Typography","Fab","useRouter","Link","auth","makeStyles","React","useState","useEffect","useRef","fetch","ArrowBackIcon","error","useStyles","theme","header","paddingTop","fab","position","bottom","spacing","left","Login","props","username","setUsername","password","setPassword","missingError","setMissingError","loginError","setLoginError","classes","router","session","checkStatus","res","ok","status","submitForm","method","headers","USERNAME","PASSWORD","then","r","json","j","cosnole","log","changeSess","edit","push","minHeight","paper","e","preventDefault","target","value","display","back","getInitialProps","query"],"mappings":"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","sourcesContent":["import {Container,TextField,Grid,Paper,Button,Typography,Fab}  from '@material-ui/core';\r\nimport { useRouter } from 'next/router'\r\nimport Link from 'next/link'\r\nimport {auth} from '../firebase';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\nimport fetch from \"node-fetch\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {error} from \"next/dist/build/output/log\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header:{\r\n      paddingTop:'1rem'\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        left: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nfunction Login(props) {\r\n    const [username,setUsername] = useState();\r\n    const [password,setPassword] = useState();\r\n\r\n    const [missingError,setMissingError] = useState(false);\r\n    const [loginError,setLoginError] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const router = useRouter();\r\n\r\n    useEffect(()=>{\r\n        /*if(props.session!==null && props.query.refresh!=='false')\r\n            router.back();*/\r\n    },[props.session]);\r\n\r\n    useEffect(()=>{\r\n        /*props.setThemeBtn(false);\r\n\r\n        return () => {\r\n            props.setThemeBtn(true);\r\n        }*/\r\n    },[]);\r\n\r\n    function checkStatus(res) {\r\n        if (res.ok) { // res.status >= 200 && res.status < 300\r\n            return res;\r\n        } else {\r\n            if(res.status===401)\r\n                setLoginError(true);\r\n\r\n            throw error(res.status);\r\n        }\r\n    }\r\n\r\n\r\n    const submitForm = () =>{\r\n        setLoginError(false);\r\n        setMissingError(false);\r\n        if(!username||!password) {\r\n            setMissingError(true);\r\n        } else {\r\n            fetch(\"http://a2017sedlja.delta-studenti.cz/projektAPI/validate.php\", {method:\"POST\",headers:{USERNAME: username,PASSWORD: password}}).then(checkStatus).then(r=>r.json()).then(j => {\r\n                if(j.error) {\r\n                    cosnole.log(j.error);\r\n                } else {\r\n                    props.changeSess({\r\n                        session:j[0],\r\n                        edit:j[1]\r\n                    });\r\n                    router.push('/');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container direction={\"row\"} justify={\"center\"} alignItems={\"center\"} style={{minHeight:'100vh',position:'absolute'}}>\r\n                <Container maxWidth=\"xs\">\r\n                    <Paper className={classes.paper}>\r\n                        <form method={\"post\"} onSubmit={e => {\r\n                            e.preventDefault();\r\n                            submitForm();\r\n                        }}>\r\n                            <Grid container direction={\"column\"} justify={\"center\"} alignItems={\"center\"} spacing={2}>\r\n                                <Typography className={classes.header} variant=\"h4\">\r\n                                    Login\r\n                                </Typography>\r\n                                <Grid item>\r\n                                <TextField\r\n                                    error={(!username&&missingError)||loginError}\r\n                                    fullWidth\r\n                                    helperText={!username&&missingError?\"required\":null}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Username\"\r\n                                    type=\"text\"\r\n                                    onChange={e => {\r\n                                        setUsername(e.target.value)\r\n                                    }}\r\n                                    name={\"username\"}\r\n                                />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        error={(!password&&missingError)||loginError}\r\n                                        fullWidth\r\n                                        helperText={!password&&missingError?\"required\":null}\r\n                                        variant=\"outlined\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        onChange={e => {\r\n                                            setPassword(e.target.value)\r\n                                        }}\r\n                                        name={\"password\"}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                <input style={{display:\"none\"}} id={\"submit-btn\"} type={\"submit\"}></input>\r\n                                <label htmlFor=\"submit-btn\">\r\n                                    <Button variant={\"contained\"} color={\"primary\"} component=\"span\">Login</Button>\r\n                                </label>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Paper>\r\n                    { props.session!==null?\r\n                        (<Fab onClick={()=>{router.back()}} variant=\"extended\" color={\"secondary\"} className={classes.fab}>\r\n                        <ArrowBackIcon/>\r\n                        Back to app\r\n                    </Fab>):null}\r\n                </Container>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nLogin.getInitialProps = ({query}) => {\r\n    return{query:query}\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}