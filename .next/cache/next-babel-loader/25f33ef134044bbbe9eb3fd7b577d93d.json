{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projektIP - firebase\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { lightTheme, darkTheme } from '../components/Theme';\nimport CustomAppBar from \"../components/CustomAppBar\";\nimport { Switch, FormControlLabel, Box } from \"@material-ui/core\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyApp).call(this, props));\n    _this.state = {\n      theme: false,\n      showBtn: true,\n      session: null,\n      edit: 0\n    };\n    _this.themeReg = /theme=(\\w+)/;\n    _this.sessionReg = /sessionID-NEKRAST!=(\\w+)/;\n    _this.editReg = /edit=(\\w+)/;\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var themeCookie = document.cookie.match(this.themeReg);\n      var sessionCookie = document.cookie.match(this.sessionReg);\n      var editCookie = document.cookie.match(this.editReg);\n      this.pathname = Router.pathname;\n      if (themeCookie) this.setState(function (state) {\n        return {\n          theme: JSON.parse(themeCookie[1])\n        };\n      });\n\n      if (sessionCookie) {\n        this.setState(function (state) {\n          return {\n            session: sessionCookie[1]\n          };\n        });\n      } else {\n        Router.push(\"/login\");\n      }\n\n      if (editCookie) {\n        this.setState(function (state) {\n          return {\n            edit: editCookie[1]\n          };\n        });\n      }\n\n      if (this.state.edit === 0 && (Router.pathname === \"/editroom\" || Router.pathname === \"/editperson\")) Router.push(\"/login\"); // Remove the server-side injected CSS.\n\n      var jssStyles = document.querySelector('#jss-server-side');\n\n      if (jssStyles) {\n        jssStyles.parentElement.removeChild(jssStyles);\n      }\n    }\n  }, {\n    key: \"switchTheme\",\n    value: function switchTheme() {\n      var _this2 = this;\n\n      this.setState(function (state) {\n        document.cookie = 'theme=' + !_this2.state.theme;\n        return {\n          theme: !state.theme\n        };\n      });\n    }\n  }, {\n    key: \"toggleThemeSwitch\",\n    value: function toggleThemeSwitch(value) {\n      this.setState(function (state) {\n        return {\n          showBtn: value\n        };\n      });\n    }\n  }, {\n    key: \"changeSession\",\n    value: function changeSession(value) {\n      this.setState(function (state) {\n        document.cookie = \"sessionID-NEKRAST!=\" + value.session;\n        document.cookie = \"edit=\" + value.edit;\n        return {\n          session: value.session,\n          edit: value.edit\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"My page\"), __jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), __jsx(ThemeProvider, {\n        theme: this.state.theme ? darkTheme : lightTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, __jsx(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), this.state.showBtn ? __jsx(CustomAppBar, {\n        text: \"Logged as: \" + this.state.session,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }) : null, __jsx(Box, {\n        height: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        session: this.state.session,\n        edit: this.state.edit,\n        changeSess: this.changeSession.bind(this),\n        setThemeBtn: this.toggleThemeSwitch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), this.state.showBtn ? __jsx(FormControlLabel, {\n        labelPlacement: \"start\",\n        label: \"Dark mode\",\n        control: __jsx(Switch, {\n          checked: this.state.theme,\n          onChange: this.switchTheme.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projektIP - firebase/pages/_app.js"],"names":["React","App","Head","Router","ThemeProvider","CssBaseline","lightTheme","darkTheme","CustomAppBar","Switch","FormControlLabel","Box","MyApp","props","state","theme","showBtn","session","edit","themeReg","sessionReg","editReg","themeCookie","document","cookie","match","sessionCookie","editCookie","pathname","setState","JSON","parse","push","jssStyles","querySelector","parentElement","removeChild","value","Component","pageProps","changeSession","bind","toggleThemeSwitch","switchTheme"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,UAAR,EAAmBC,SAAnB,QAAmC,qBAAnC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,MAAR,EAAeC,gBAAf,EAAgCC,GAAhC,QAA0C,mBAA1C;;IAEqBC,K;;;;;AACjB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE,KAAR;AAAcC,MAAAA,OAAO,EAAC,IAAtB;AAA2BC,MAAAA,OAAO,EAAC,IAAnC;AAAwCC,MAAAA,IAAI,EAAC;AAA7C,KAAb;AACA,UAAKC,QAAL,GAAgB,aAAhB;AACA,UAAKC,UAAL,GAAkB,0BAAlB;AACA,UAAKC,OAAL,GAAe,YAAf;AALe;AAMlB;;;;wCAEmB;AAEhB,UAAMC,WAAW,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,KAAKN,QAA3B,CAApB;AACA,UAAMO,aAAa,GAAGH,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,KAAKL,UAA3B,CAAtB;AACA,UAAMO,UAAU,GAAGJ,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,KAAKJ,OAA3B,CAAnB;AACA,WAAKO,QAAL,GAAgBzB,MAAM,CAACyB,QAAvB;AAEA,UAAGN,WAAH,EACI,KAAKO,QAAL,CAAc,UAACf,KAAD,EAAW;AACrB,eAAO;AAACC,UAAAA,KAAK,EAAEe,IAAI,CAACC,KAAL,CAAWT,WAAW,CAAC,CAAD,CAAtB;AAAR,SAAP;AACH,OAFD;;AAIJ,UAAGI,aAAH,EAAkB;AACd,aAAKG,QAAL,CAAc,UAACf,KAAD,EAAW;AACrB,iBAAO;AAACG,YAAAA,OAAO,EAAES,aAAa,CAAC,CAAD;AAAvB,WAAP;AACH,SAFD;AAGH,OAJD,MAIO;AACHvB,QAAAA,MAAM,CAAC6B,IAAP,CAAY,QAAZ;AACH;;AAED,UAAGL,UAAH,EAAe;AACX,aAAKE,QAAL,CAAc,UAACf,KAAD,EAAW;AACrB,iBAAO;AAACI,YAAAA,IAAI,EAAES,UAAU,CAAC,CAAD;AAAjB,WAAP;AACH,SAFD;AAGH;;AAED,UAAG,KAAKb,KAAL,CAAWI,IAAX,KAAkB,CAAlB,KAAwBf,MAAM,CAACyB,QAAP,KAAkB,WAAlB,IAAiCzB,MAAM,CAACyB,QAAP,KAAkB,aAA3E,CAAH,EACIzB,MAAM,CAAC6B,IAAP,CAAY,QAAZ,EA3BY,CA6BhB;;AACA,UAAMC,SAAS,GAAGV,QAAQ,CAACW,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,UAAID,SAAJ,EAAe;AACXA,QAAAA,SAAS,CAACE,aAAV,CAAwBC,WAAxB,CAAoCH,SAApC;AACH;AACJ;;;kCAEY;AAAA;;AACT,WAAKJ,QAAL,CAAc,UAACf,KAAD,EAAW;AACrBS,QAAAA,QAAQ,CAACC,MAAT,GAAkB,WAAU,CAAC,MAAI,CAACV,KAAL,CAAWC,KAAxC;AACA,eAAO;AAACA,UAAAA,KAAK,EAAC,CAACD,KAAK,CAACC;AAAd,SAAP;AACH,OAHD;AAIH;;;sCAEiBsB,K,EAAM;AACpB,WAAKR,QAAL,CAAc,UAACf,KAAD,EAAW;AACrB,eAAO;AAACE,UAAAA,OAAO,EAACqB;AAAT,SAAP;AACH,OAFD;AAGH;;;kCAEaA,K,EAAM;AAChB,WAAKR,QAAL,CAAc,UAACf,KAAD,EAAW;AACrBS,QAAAA,QAAQ,CAACC,MAAT,GAAkB,wBAAwBa,KAAK,CAACpB,OAAhD;AACAM,QAAAA,QAAQ,CAACC,MAAT,GAAkB,UAAQa,KAAK,CAACnB,IAAhC;AACA,eAAO;AAACD,UAAAA,OAAO,EAAEoB,KAAK,CAACpB,OAAhB;AAAyBC,UAAAA,IAAI,EAAEmB,KAAK,CAACnB;AAArC,SAAP;AACH,OAJD;AAKH;;;6BAEQ;AAAA,wBAC4B,KAAKL,KADjC;AAAA,UACGyB,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAGL,aACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,sDAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI,MAAC,aAAD;AAAe,QAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWC,KAAX,GAAiBR,SAAjB,GAA2BD,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQK,KAAKQ,KAAL,CAAWE,OAAX,GAAmB,MAAC,YAAD;AAAc,QAAA,IAAI,EAAE,gBAAc,KAAKF,KAAL,CAAWG,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB,GAA2E,IARhF,EASI,MAAC,GAAD;AAAK,QAAA,MAAM,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD,eAAesB,SAAf;AAA0B,QAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWG,OAA9C;AAAuD,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAAxE;AAA8E,QAAA,UAAU,EAAE,KAAKsB,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAA1F;AAAyH,QAAA,WAAW,EAAE,KAAKC,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CATJ,EAYK,KAAK3B,KAAL,CAAWE,OAAX,GACG,MAAC,gBAAD;AAAkB,QAAA,cAAc,EAAE,OAAlC;AAA2C,QAAA,KAAK,EAAE,WAAlD;AAA+D,QAAA,OAAO,EAAE,MAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,KAA5B;AAAmC,UAAA,QAAQ,EAAE,KAAK4B,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAEI,IAdT,CALJ,CADJ;AAyBH;;;;EA9F8BxC,G;;SAAdW,K","sourcesContent":["import React from 'react';\r\nimport App from 'next/app';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {lightTheme,darkTheme} from '../components/Theme';\r\nimport CustomAppBar from \"../components/CustomAppBar\";\r\nimport {Switch,FormControlLabel,Box} from \"@material-ui/core\";\r\n\r\nexport default class MyApp extends App {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {theme: false,showBtn:true,session:null,edit:0};\r\n        this.themeReg = /theme=(\\w+)/;\r\n        this.sessionReg = /sessionID-NEKRAST!=(\\w+)/;\r\n        this.editReg = /edit=(\\w+)/;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const themeCookie = document.cookie.match(this.themeReg);\r\n        const sessionCookie = document.cookie.match(this.sessionReg);\r\n        const editCookie = document.cookie.match(this.editReg);\r\n        this.pathname = Router.pathname;\r\n\r\n        if(themeCookie)\r\n            this.setState((state) => {\r\n                return {theme: JSON.parse(themeCookie[1])}\r\n            });\r\n\r\n        if(sessionCookie) {\r\n            this.setState((state) => {\r\n                return {session: sessionCookie[1]}\r\n            });\r\n        } else {\r\n            Router.push(\"/login\");\r\n        }\r\n\r\n        if(editCookie) {\r\n            this.setState((state) => {\r\n                return {edit: editCookie[1]}\r\n            });\r\n        }\r\n\r\n        if(this.state.edit===0 && (Router.pathname===\"/editroom\" || Router.pathname===\"/editperson\"))\r\n            Router.push(\"/login\");\r\n\r\n        // Remove the server-side injected CSS.\r\n        const jssStyles = document.querySelector('#jss-server-side');\r\n        if (jssStyles) {\r\n            jssStyles.parentElement.removeChild(jssStyles);\r\n        }\r\n    }\r\n\r\n    switchTheme(){\r\n        this.setState((state) => {\r\n            document.cookie = 'theme='+(!this.state.theme);\r\n            return {theme:!state.theme}\r\n        });\r\n    }\r\n\r\n    toggleThemeSwitch(value){\r\n        this.setState((state) => {\r\n            return {showBtn:value}\r\n        });\r\n    }\r\n\r\n    changeSession(value){\r\n        this.setState((state) => {\r\n            document.cookie = \"sessionID-NEKRAST!=\" + value.session;\r\n            document.cookie = \"edit=\"+value.edit;\r\n            return {session: value.session, edit: value.edit}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { Component, pageProps } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>My page</title>\r\n                    <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n                </Head>\r\n                <ThemeProvider theme={this.state.theme?darkTheme:lightTheme}>\r\n                    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n                    {/*<div style={\r\n                        {display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        height: \"100vh\"}\r\n                    }>*/}\r\n                    <CssBaseline />\r\n                    {this.state.showBtn?<CustomAppBar text={\"Logged as: \"+this.state.session}/>:null}\r\n                    <Box height={\"100%\"}>\r\n                        <Component {...pageProps} session={this.state.session} edit={this.state.edit} changeSess={this.changeSession.bind(this)} setThemeBtn={this.toggleThemeSwitch.bind(this)} />\r\n                    </Box>\r\n                    {this.state.showBtn?\r\n                        <FormControlLabel labelPlacement={\"start\"} label={\"Dark mode\"} control={<Switch checked={this.state.theme} onChange={this.switchTheme.bind(this)}/>}/>\r\n                        :null}\r\n                    {/*</div>*/}\r\n                </ThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}