{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\components\\\\OnlyDesktop.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { auth } from '../firebase/index';\n\nconst onlyDesktop = Component => {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        touchDisplay: false\n      };\n    }\n\n    componentDidMount() {\n      let maxpoints = navigator.maxTouchPoints;\n      this.setState({\n        touchDisplay: maxpoints\n      });\n    }\n\n    renderContent() {\n      // @ts-ignore\n      const {\n        touchDisplay\n      } = this.state;\n\n      if (touchDisplay) {\n        return __jsx(\"div\", {\n          style: {\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Unsuported\");\n      } else {\n        // @ts-ignore\n        return __jsx(Component, _extends({\n          user: auth.currentUser.uid\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }));\n      }\n    }\n\n    render() {\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.renderContent());\n    }\n\n  };\n};\n\nexport default onlyDesktop;","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/components/OnlyDesktop.tsx"],"names":["React","auth","onlyDesktop","Component","constructor","props","state","touchDisplay","componentDidMount","maxpoints","navigator","maxTouchPoints","setState","renderContent","position","width","height","currentUser","uid","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAyD,OAAzD;AAEA,SAASC,IAAT,QAAqB,mBAArB;;AAIA,MAAMC,WAAW,GAAIC,SAAD,IAAwC;AACxD,SAAO,cAAcH,KAAK,CAACG,SAApB,CAA8B;AACjCC,IAAAA,WAAW,CAACC,KAAD,EAAY;AACnB,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,YAAY,EAAE;AADL,OAAb;AAGH;;AACDC,IAAAA,iBAAiB,GAAG;AAChB,UAAIC,SAAS,GAAGC,SAAS,CAACC,cAA1B;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,YAAY,EAAEE;AADJ,OAAd;AAGH;;AACDI,IAAAA,aAAa,GAAG;AACZ;AACA,YAAM;AAAEN,QAAAA;AAAF,UAAmB,KAAKD,KAA9B;;AACA,UAAGC,YAAH,EAAiB;AACb,eAAO;AAAK,UAAA,KAAK,EAAE;AAACO,YAAAA,QAAQ,EAAC,UAAV;AAAqBC,YAAAA,KAAK,EAAC,MAA3B;AAAkCC,YAAAA,MAAM,EAAC;AAAzC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,OAFD,MAEO;AACH;AACA,eAAO,MAAC,SAAD;AAAW,UAAA,IAAI,EAAEf,IAAI,CAACgB,WAAL,CAAiBC;AAAlC,WAA4C,KAAKb,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH;AACJ;;AACDc,IAAAA,MAAM,GAAG;AACL,aACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKN,aAAL,EADL,CADJ;AAKH;;AA7BgC,GAArC;AA+BH,CAhCD;;AAiCA,eAAeX,WAAf","sourcesContent":["import React, {ReactComponentElement, ReactElement} from 'react';\r\nimport router from 'next/router';\r\nimport { auth } from '../firebase/index';\r\nimport Loading from \"./Loading\";\r\nimport {namedTypes} from \"ast-types\";\r\n\r\nconst onlyDesktop = (Component:React.ComponentType<any>) => {\r\n    return class extends React.Component {\r\n        constructor(props:any) {\r\n            super(props);\r\n            this.state = {\r\n                touchDisplay: false,\r\n            };\r\n        }\r\n        componentDidMount() {\r\n            let maxpoints = navigator.maxTouchPoints;\r\n            this.setState({\r\n                touchDisplay: maxpoints\r\n            });\r\n        }\r\n        renderContent() {\r\n            // @ts-ignore\r\n            const { touchDisplay } = this.state;\r\n            if(touchDisplay) {\r\n                return <div style={{position:\"absolute\",width:\"100%\",height:\"100%\"}}>Unsuported</div>;\r\n            } else {\r\n                // @ts-ignore\r\n                return <Component user={auth.currentUser.uid} { ...this.props } />\r\n            }\r\n        }\r\n        render() {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.renderContent()}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    };\r\n}\r\nexport default onlyDesktop;"]},"metadata":{},"sourceType":"module"}