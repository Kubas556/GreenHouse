{"ast":null,"code":"var __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport fetch from \"node-fetch\";\nimport useSWR from \"swr\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableContainer, Paper, FormControl, InputLabel, Select, MenuItem, Input, Chip, TextField, Button, Grid, Typography } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst useStyles = makeStyles(theme => ({\n  table: {\n    padding: \"5%\"\n  },\n  form: {\n    display: 'flex',\n    flexFlow: 'column'\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  field: {\n    margin: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(2)\n  },\n  removeBtn: {\n    margin: theme.spacing(2),\n    background: theme.status.danger,\n    '&:hover': {\n      background: theme.status.danger\n    }\n  }\n}));\n\nfunction AddRoom(props) {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: name,\n    1: setName\n  } = useState(null);\n  const {\n    0: number,\n    1: setNumber\n  } = useState(null);\n  const {\n    0: phone,\n    1: setPhone\n  } = useState(null);\n  let first = true;\n\n  function checkStatus(res) {\n    if (res.ok) {\n      // res.status >= 200 && res.status < 300\n      return res;\n    } else {\n      return {\n        json: () => {\n          return {\n            error: res.status\n          };\n        }\n      };\n    }\n  }\n\n  const submitChanges = () => {\n    const params = new URLSearchParams();\n    params.append(\"name\", name);\n    params.append(\"number\", number);\n    if (phone !== null) params.append(\"phone\", phone);\n    fetch(\"http://a2017sedlja.delta-studenti.cz/projektAPI/pridatmistnost.php\", {\n      method: 'POST',\n      body: params,\n      headers: {\n        AUTHTOKEN: props.session\n      }\n    }).then(checkStatus).then(r => r.json()).then(f => {\n      if (!f.error) router.back();\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.table\n  }, __jsx(Typography, {\n    className: classes.header,\n    variant: \"h4\"\n  }, \"Add room\"), __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: e => {\n      e.preventDefault();\n      submitChanges();\n    }\n  }, __jsx(TextField, {\n    className: classes.field,\n    onChange: e => {\n      setName(e.target.value);\n    },\n    required: true,\n    type: \"text\",\n    id: \"name\",\n    label: \"room name\"\n  }), __jsx(TextField, {\n    className: classes.field,\n    onChange: e => {\n      setNumber(e.target.value);\n    },\n    required: true,\n    type: \"number\",\n    id: \"number\",\n    label: \"room number\"\n  }), __jsx(TextField, {\n    className: classes.field,\n    onChange: e => {\n      setPhone(e.target.value);\n    },\n    type: \"number\",\n    id: \"phone\",\n    label: \"room phone\"\n  }), __jsx(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    id: \"submit-btn\",\n    type: \"submit\"\n  })), __jsx(\"label\", {\n    htmlFor: \"submit-btn\"\n  }, __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\"\n  }, \"Add\"))), __jsx(\"p\", null, \"Hello Next.js\"));\n}\n\nAddRoom.getInitialProps = ({\n  query\n}) => {\n  return {\n    query: query\n  };\n};\n\nexport default AddRoom;","map":null,"metadata":{},"sourceType":"module"}