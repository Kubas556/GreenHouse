{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport router from 'next/router';\nimport { auth } from '../firebase/index';\nimport Loading from \"./Loading\";\n\nconst withAuth = Component => {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        status: 'LOADING'\n      };\n    }\n\n    componentDidMount() {\n      auth.onAuthStateChanged(authUser => {\n        if (authUser) {\n          this.setState({\n            status: 'SIGNED_IN'\n          });\n        } else {\n          router.push('/login');\n        }\n      });\n    }\n\n    renderContent() {\n      // @ts-ignore\n      const {\n        status\n      } = this.state;\n\n      if (status == 'LOADING') {\n        return __jsx(\"div\", {\n          style: {\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\"\n          }\n        }, __jsx(Loading, null));\n      } else if (status == 'SIGNED_IN') {\n        // @ts-ignore\n        return __jsx(Component, _extends({\n          user: auth.currentUser.uid\n        }, this.props));\n      }\n    }\n\n    render() {\n      return __jsx(React.Fragment, null, this.renderContent());\n    }\n\n  };\n};\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}