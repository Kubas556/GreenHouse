{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport { Typography, Box, Menu, MenuItem } from \"@material-ui/core\";\nimport Link from 'next/link';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport withAuth from \"../components/WithAuth\";\nimport WithAppBar from \"../components/WithAppBar\";\nimport { firebase } from \"../firebase/index\";\nimport DeviceInfoCard from \"../components/DeviceInfoCard\";\nimport Loading from \"../components/Loading\";\n\nfunction index(props) {\n  var devicesData = firebase.database().ref(\"/users/\" + props.user + \"/devices\");\n\n  var _useState = useState([]),\n      devices = _useState[0],\n      setDevices = _useState[1];\n\n  useEffect(function () {\n    devicesData.on('value', function (data) {\n      //console.log(Object.keys(data.val()));\n      setDevices(_Object$keys(data.val()));\n    });\n  }, []);\n  var test = useRef();\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Seznam chytr\\xFDch za\\u0159\\xEDzen\\xED\"), __jsx(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, devices.length != 0 ? devices.map(function (id, index) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: '/temperature/[id]',\n      as: \"/temperature/\".concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(Box, {\n      component: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(DeviceInfoCard, {\n      key: index,\n      id: id,\n      userId: props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))));\n  }) : __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: test,\n    style: {\n      background: \"red\",\n      width: \"50px\",\n      height: \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(Menu, {\n    open: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(MenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Profile\")))));\n}\n\nexport default withAuth(function (props) {\n  return __jsx(WithAppBar, {\n    component: index,\n    title: \"Index\",\n    componentProps: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/pages/index.tsx"],"names":["Typography","Box","Menu","MenuItem","Link","React","useEffect","useRef","useState","withAuth","WithAppBar","firebase","DeviceInfoCard","Loading","index","props","devicesData","database","ref","user","devices","setDevices","on","data","val","test","display","length","map","id","background","width","height"],"mappings":"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","sourcesContent":["import {Typography, Card, CardContent, Box, Menu, MenuItem} from \"@material-ui/core\";\r\nimport Link from 'next/link';\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport withAuth from \"../components/WithAuth\";\r\nimport WithAppBar from \"../components/WithAppBar\";\r\nimport IPageProps from \"../interfaces/IPageProps\";\r\nimport {firebase} from \"../firebase/index\";\r\nimport DeviceInfoCard from \"../components/DeviceInfoCard\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nfunction index(props:IPageProps){\r\n    let devicesData = firebase.database().ref(\"/users/\"+props.user+\"/devices\");\r\n    let [devices,setDevices] = useState<string[]>([]);\r\n\r\n    useEffect(()=>{\r\n        devicesData.on('value',data=>{\r\n            //console.log(Object.keys(data.val()));\r\n            setDevices(Object.keys(data.val()));\r\n        });\r\n    },[]);\r\n\r\n    let test = useRef();\r\n    return(\r\n        <div>\r\n            <div>\r\n                <Typography variant=\"h4\" component=\"h2\">\r\n                    Seznam chytrých zařízení\r\n                </Typography>\r\n                <div style={{display:\"flex\"}}>\r\n                    {\r\n                        devices.length!=0?\r\n                        devices.map(\r\n                            (id:string,index:number) =>\r\n                            <div>\r\n                                <Link href={'/temperature/[id]'} as={`/temperature/${id}`}>\r\n                                    <Box component={\"a\"}>\r\n                                        <DeviceInfoCard key={index} id={id} userId={props.user}/>\r\n                                    </Box>\r\n                                </Link>\r\n                            </div>\r\n                        ):<Loading/>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <div ref={test} style={{background:\"red\",width:\"50px\",height:\"50px\"}}></div>\r\n                    <Menu open={true} >\r\n                        <MenuItem>Profile</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withAuth((props:IPageProps)=>{return(\r\n    <WithAppBar component={index} title={\"Index\"} componentProps={props}/>\r\n)});"]},"metadata":{},"sourceType":"module"}