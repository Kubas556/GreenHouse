{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\pages\\\\temperature.tsx\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport withAuth from \"../components/WithAuth\";\nimport WithAppBar from \"../components/WithAppBar\";\nimport Tempmeter from \"../components/Tempmeter\";\nimport Termostat from \"../components/Termostat\";\nimport { firebase } from \"../firebase/index\";\nconst useStyle = makeStyles(theme => ({\n  center: {\n    display: 'flex'\n  },\n  tempmeter: {\n    margin: '50px',\n    padding: '1rem'\n  }\n}));\n\nfunction Temperature(props) {\n  const classes = useStyle();\n  const {\n    0: temp,\n    1: setTemp\n  } = useState(-50);\n  let tempData = firebase.database().ref(\"/users/\" + props.user + \"/greenhouse/temp\");\n  useEffect(() => {\n    tempData.on('value', data => {\n      setTemp(data.val());\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.tempmeter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Tempmeter, {\n    theme: props.theme,\n    temp: temp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))), __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Termostat, {\n    theme: props.theme,\n    defaultValue: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n}\n\nfunction ex(props) {\n  return __jsx(WithAppBar, {\n    component: Temperature,\n    title: \"Teplota\",\n    componentProps: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  });\n}\n\nexport default withAuth(ex);","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/pages/temperature.tsx"],"names":["makeStyles","React","useEffect","useState","Paper","withAuth","WithAppBar","Tempmeter","Termostat","firebase","useStyle","theme","center","display","tempmeter","margin","padding","Temperature","props","classes","temp","setTemp","tempData","database","ref","user","on","data","val","ex"],"mappings":";;AAGA,SAAwBA,UAAxB,QAAwD,0BAAxD;AAEA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAGA,SAAmBC,KAAnB,QAA+B,mBAA/B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AAGA,MAAMC,QAAQ,GAAGV,UAAU,CAACW,KAAK,KAAG;AAChCC,EAAAA,MAAM,EAAC;AACHC,IAAAA,OAAO,EAAC;AADL,GADyB;AAIhCC,EAAAA,SAAS,EAAC;AACNC,IAAAA,MAAM,EAAC,MADD;AAENC,IAAAA,OAAO,EAAC;AAFF;AAJsB,CAAH,CAAN,CAA3B;;AAUA,SAASC,WAAT,CAAqBC,KAArB,EAAuC;AACnC,QAAMC,OAAO,GAAGT,QAAQ,EAAxB;AACA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAMC;AAAN,MAAiBlB,QAAQ,CAAC,CAAC,EAAF,CAA/B;AACA,MAAImB,QAAQ,GAAGb,QAAQ,CAACc,QAAT,GAAoBC,GAApB,CAAwB,YAAUN,KAAK,CAACO,IAAhB,GAAqB,kBAA7C,CAAf;AAEAvB,EAAAA,SAAS,CAAC,MAAI;AACVoB,IAAAA,QAAQ,CAACI,EAAT,CAAY,OAAZ,EAAoBC,IAAI,IAAE;AACtBN,MAAAA,OAAO,CAACM,IAAI,CAACC,GAAL,EAAD,CAAP;AACH,KAFD;AAGH,GAJQ,EAIP,EAJO,CAAT;AAMH,SACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACL,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEI,KAAK,CAACP,KAAxB;AAA+B,IAAA,IAAI,EAAES,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADJ,CADJ,EAMI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,KAAK,CAACP,KAAxB;AAA+B,IAAA,YAAY,EAAE,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ;AAYA;;AAED,SAASkB,EAAT,CAAYX,KAAZ,EAA8B;AAC1B,SACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAED,WAAvB;AAAoC,IAAA,KAAK,EAAE,SAA3C;AAAsD,IAAA,cAAc,EAAEC,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH;;AAED,eAAeb,QAAQ,CAACwB,EAAD,CAAvB","sourcesContent":["import Link from \"next/link\";\r\nimport useSWR from 'swr';\r\nimport {DatePicker,MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {orange} from \"@material-ui/core/colors\";\r\nimport {useRouter} from \"next/router\";\r\nimport {Typography,Paper} from \"@material-ui/core\";\r\nimport withAuth from \"../components/WithAuth\";\r\nimport WithAppBar from \"../components/WithAppBar\";\r\nimport Tempmeter from \"../components/Tempmeter\";\r\nimport Termostat from \"../components/Termostat\";\r\nimport {firebase} from \"../firebase/index\";\r\nimport IPageProps from \"../interfaces/IPageProps\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    center:{\r\n        display:'flex'\r\n    },\r\n    tempmeter:{\r\n        margin:'50px',\r\n        padding:'1rem'\r\n    }\r\n}));\r\n\r\nfunction Temperature(props:IPageProps) {\r\n    const classes = useStyle();\r\n    const [temp,setTemp] = useState(-50);\r\n    let tempData = firebase.database().ref(\"/users/\"+props.user+\"/greenhouse/temp\");\r\n\r\n    useEffect(()=>{\r\n        tempData.on('value',data=>{\r\n            setTemp(data.val());\r\n        });\r\n    },[]);\r\n\r\n return(\r\n     <div className={classes.center}>\r\n         <div className={classes.tempmeter}>\r\n             <Paper>\r\n            <Tempmeter theme={props.theme} temp={temp} />\r\n             </Paper>\r\n         </div>\r\n         <Paper>\r\n             <Termostat theme={props.theme} defaultValue={40}/>\r\n         </Paper>\r\n     </div>\r\n )\r\n}\r\n\r\nfunction ex(props:IPageProps) {\r\n    return(\r\n        <WithAppBar component={Temperature} title={\"Teplota\"} componentProps={props}/>\r\n    )\r\n}\r\n\r\nexport default withAuth(ex);"]},"metadata":{},"sourceType":"module"}