{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\pages\\\\login.tsx\";\nvar __jsx = React.createElement;\nimport { Container, TextField, Grid, Paper, Button, Typography, Fab } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { auth, firebase } from '../firebase/index';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useState, useEffect } from \"react\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nconst useStyles = makeStyles(theme => ({\n  header: {\n    paddingTop: '1rem'\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2)\n  }\n}));\n\nfunction Login(props) {\n  const {\n    0: username,\n    1: setUsername\n  } = useState();\n  const {\n    0: password,\n    1: setPassword\n  } = useState();\n  const {\n    0: missingError,\n    1: setMissingError\n  } = useState(false);\n  const {\n    0: loginError,\n    1: setLoginError\n  } = useState(false);\n  const classes = useStyles();\n  const router = useRouter();\n  useEffect(() => {//props.setThemeBtn(false);\n  }, []);\n\n  const handleSignIn = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n    auth.signInWithPopup(provider).then(() => {\n      alert('You are signed In');\n      router.push('/');\n    }).catch(err => {\n      alert('OOps something went wrong check your console');\n      console.log(err);\n    });\n  };\n\n  const submitForm = () => {\n    handleSignIn();\n    /*setLoginError(false);\r\n    setMissingError(false);\r\n    if(!username||!password) {\r\n        setMissingError(true);\r\n    } else {\r\n        fetch(\"http://a2017sedlja.delta-studenti.cz/projektAPI/validate.php\", {method:\"POST\",headers:{USERNAME: username,PASSWORD: password}}).then(checkStatus).then(r=>r.json()).then(j => {\r\n            if(j.error) {\r\n                cosnole.log(j.error);\r\n            } else {\r\n                props.changeSess({\r\n                    session:j[0],\r\n                    edit:j[1]\r\n                });\r\n                router.push('/');\r\n            }\r\n        });\r\n    }*/\n  }; // @ts-ignore\n\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      minHeight: '100vh',\n      position: 'absolute'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: // @ts-ignore\n    classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: e => {\n      e.preventDefault();\n      submitForm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Typography, {\n    className: classes.header,\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Login\"), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: !username && missingError || loginError,\n    fullWidth: true,\n    helperText: !username && missingError ? \"required\" : null,\n    variant: \"outlined\",\n    label: \"Username\",\n    type: \"text\",\n    onChange: e => {\n      // @ts-ignore\n      setUsername(e.target.value);\n    },\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(TextField, {\n    error: !password && missingError || loginError,\n    fullWidth: true,\n    helperText: !password && missingError ? \"required\" : null,\n    variant: \"outlined\",\n    label: \"Password\",\n    type: \"password\",\n    onChange: e => {\n      // @ts-ignore\n      setPassword(e.target.value);\n    },\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    id: \"submit-btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"submit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Login\")))))), __jsx(Fab, {\n    onClick: () => {\n      router.back();\n    },\n    variant: \"extended\",\n    color: \"secondary\",\n    className: classes.fab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(ArrowBackIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), \"Back to app\"))));\n}\n/*Login.getInitialProps = ({query}:NextApiRequest) => {\r\n    return{query:query}\r\n}*/\n\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/pages/login.tsx"],"names":["Container","TextField","Grid","Paper","Button","Typography","Fab","useRouter","auth","firebase","makeStyles","React","useState","useEffect","ArrowBackIcon","useStyles","theme","header","paddingTop","fab","position","bottom","spacing","left","Login","props","username","setUsername","password","setPassword","missingError","setMissingError","loginError","setLoginError","classes","router","handleSignIn","provider","GoogleAuthProvider","addScope","signInWithPopup","then","alert","push","catch","err","console","log","submitForm","minHeight","paper","e","preventDefault","target","value","display","back"],"mappings":"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","sourcesContent":["import {Container,TextField,Grid,Paper,Button,Typography,Fab}  from '@material-ui/core';\r\nimport { useRouter } from 'next/router'\r\nimport Link from 'next/link'\r\nimport {auth,firebase} from '../firebase/index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, {useState, useEffect, useRef, SyntheticEvent} from \"react\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {error} from \"next/dist/build/output/log\";\r\nimport IPageProps from \"../interfaces/IPageProps\";\r\nimport {NextApiRequest} from \"next\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header:{\r\n      paddingTop:'1rem'\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        left: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nfunction Login(props:IPageProps) {\r\n    const [username,setUsername] = useState();\r\n    const [password,setPassword] = useState();\r\n\r\n    const [missingError,setMissingError] = useState(false);\r\n    const [loginError,setLoginError] = useState(false);\r\n\r\n    const classes = useStyles();\r\n    const router = useRouter();\r\n\r\n    useEffect(()=>{\r\n        //props.setThemeBtn(false);\r\n    },[]);\r\n\r\n    const handleSignIn = () => {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n        provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n        auth.signInWithPopup(provider)\r\n            .then(() => {\r\n                alert('You are signed In');\r\n                router.push('/');\r\n            })\r\n            .catch(err => {\r\n                alert('OOps something went wrong check your console');\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n    const submitForm = () =>{\r\n        handleSignIn();\r\n        /*setLoginError(false);\r\n        setMissingError(false);\r\n        if(!username||!password) {\r\n            setMissingError(true);\r\n        } else {\r\n            fetch(\"http://a2017sedlja.delta-studenti.cz/projektAPI/validate.php\", {method:\"POST\",headers:{USERNAME: username,PASSWORD: password}}).then(checkStatus).then(r=>r.json()).then(j => {\r\n                if(j.error) {\r\n                    cosnole.log(j.error);\r\n                } else {\r\n                    props.changeSess({\r\n                        session:j[0],\r\n                        edit:j[1]\r\n                    });\r\n                    router.push('/');\r\n                }\r\n            });\r\n        }*/\r\n    }\r\n\r\n    // @ts-ignore\r\n    return (\r\n        <div>\r\n            <Grid container direction={\"row\"} justify={\"center\"} alignItems={\"center\"} style={{minHeight:'100vh',position:'absolute'}}>\r\n                <Container maxWidth=\"xs\">\r\n                    <Paper className={\r\n                        // @ts-ignore\r\n                        classes.paper\r\n                    }>\r\n                        <form method={\"post\"} onSubmit={e => {\r\n                            e.preventDefault();\r\n                            submitForm();\r\n                        }}>\r\n                            <Grid container direction={\"column\"} justify={\"center\"} alignItems={\"center\"} spacing={2}>\r\n                                <Typography className={classes.header} variant=\"h4\">\r\n                                    Login\r\n                                </Typography>\r\n                                <Grid item>\r\n                                <TextField\r\n                                    error={(!username&&missingError)||loginError}\r\n                                    fullWidth\r\n                                    helperText={!username&&missingError?\"required\":null}\r\n                                    variant=\"outlined\"\r\n                                    label=\"Username\"\r\n                                    type=\"text\"\r\n                                    onChange={e => {\r\n                                        // @ts-ignore\r\n                                        setUsername(e.target.value)\r\n                                    }}\r\n                                    name={\"username\"}\r\n                                />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        error={(!password&&missingError)||loginError}\r\n                                        fullWidth\r\n                                        helperText={!password&&missingError?\"required\":null}\r\n                                        variant=\"outlined\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        onChange={e => {\r\n                                            // @ts-ignore\r\n                                            setPassword(e.target.value)\r\n                                        }}\r\n                                        name={\"password\"}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                <input style={{display:\"none\"}} id={\"submit-btn\"} type={\"submit\"}></input>\r\n                                <label htmlFor=\"submit-btn\">\r\n                                    <Button variant={\"contained\"} color={\"primary\"} component=\"span\">Login</Button>\r\n                                </label>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Paper>\r\n\r\n                    <Fab onClick={()=>{router.back()}} variant=\"extended\" color={\"secondary\"} className={classes.fab}>\r\n                        <ArrowBackIcon/>\r\n                        Back to app\r\n                    </Fab>\r\n                </Container>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*Login.getInitialProps = ({query}:NextApiRequest) => {\r\n    return{query:query}\r\n}*/\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}