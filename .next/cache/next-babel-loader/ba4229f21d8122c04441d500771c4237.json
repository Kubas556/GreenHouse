{"ast":null,"code":"var __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport withAuth from \"../../components/WithAuth\";\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\nimport Tempmeter from \"../../components/Tempmeter\";\nimport Termostat from \"../../components/Termostat\";\nimport { firebase } from \"../../firebase/index\";\nconst useStyle = makeStyles(theme => ({\n  center: {\n    display: 'flex'\n  },\n  controllComponent: {\n    margin: '50px',\n    padding: '1rem'\n  }\n}));\n\nfunction Id(props) {\n  const classes = useStyle();\n  const {\n    0: temp,\n    1: setTemp\n  } = useState(-50);\n  const {\n    0: defTemp,\n    1: setDefTemp\n  } = useState();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  let tempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/temp\");\n  let targetTempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\");\n\n  const termostatChange = value => {\n    firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\").set(value);\n  };\n\n  useEffect(() => {\n    tempData.on('value', data => {\n      setTemp(data.val());\n    });\n    targetTempData.once('value', data => {\n      setDefTemp(data.val());\n    });\n  }, []);\n  return __jsx(\"div\", null, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h2\"\n  }, \"Teplota\"), __jsx(\"div\", {\n    className: classes.center\n  }, __jsx(\"div\", {\n    className: classes.controllComponent\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    }\n  }, __jsx(Tempmeter, {\n    theme: props.theme,\n    temp: temp\n  }))), __jsx(\"div\", {\n    className: classes.controllComponent\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    }\n  }, __jsx(Termostat, {\n    theme: props.theme,\n    onValueChanged: termostatChange,\n    defaultValue: defTemp\n  })))));\n}\n\nfunction ex(props) {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  let nameData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/name\");\n  useEffect(() => {\n    nameData.on('value', data => {\n      setName(data.val());\n    });\n  }, []);\n  return __jsx(WithDrawerAppBar, {\n    component: Id,\n    title: name,\n    deviceId: id.toString(),\n    componentProps: props\n  });\n}\n\nexport default withAuth(ex);","map":null,"metadata":{},"sourceType":"module"}