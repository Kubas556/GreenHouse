{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\pages\\\\temperature\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport withAuth from \"../../components/WithAuth\";\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\nimport Tempmeter from \"../../components/Tempmeter\";\nimport Termostat from \"../../components/Termostat\";\nimport { firebase } from \"../../firebase/index\";\nimport { Line } from \"react-chartjs-2\";\nimport onlyDesktop from \"../../components/OnlyDesktop\";\nconst useStyle = makeStyles(theme => ({\n  center: {\n    display: 'flex',\n    width: 'calc(100% - 1px)'\n  },\n  page: {\n    width: '100%',\n    position: 'relative'\n  },\n  controllComponent: {\n    margin: '50px',\n    width: 'min-content',\n    padding: '1rem'\n  }\n}));\n\nfunction Id(props) {\n  const classes = useStyle();\n  const {\n    0: temp,\n    1: setTemp\n  } = useState(-50);\n  const {\n    0: tempHistoryCharData,\n    1: setTempHistoryCharData\n  } = useState();\n  const {\n    0: tempHistoryCharLabels,\n    1: setTempHistoryCharLabels\n  } = useState();\n  const {\n    0: defTemp,\n    1: setDefTemp\n  } = useState();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const timeFormat = 'MM/DD/YYYY HH:mm';\n  let tempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/temp\");\n  let tempHistoryData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/history/temps\");\n  let targetTempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\");\n\n  const termostatChange = value => {\n    firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\").set(value);\n  };\n\n  useEffect(() => {\n    tempData.on('value', data => {\n      setTemp(data.val());\n    });\n    tempHistoryData.on('value', data => {\n      let charData = [];\n      let charLabels = [];\n      Object.keys(data.val()).forEach(key => {\n        charData.push(data.val()[key].temp);\n        charLabels.push(data.val()[key].time[1] + '/' + data.val()[key].time[2] + '/' + data.val()[key].time[0] + ' ' + data.val()[key].time[3] + ':' + data.val()[key].time[4]);\n      });\n      setTempHistoryCharData(charData);\n      setTempHistoryCharLabels(charLabels);\n    });\n    targetTempData.once('value', data => {\n      setDefTemp(data.val());\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Teplota\"), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Tempmeter, {\n    theme: props.theme,\n    temp: temp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Termostat, {\n    theme: props.theme,\n    onValueChanged: termostatChange,\n    defaultValue: defTemp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    style: {\n      width: 'calc(100% - 100px)',\n      maxWidth: ' calc(100% - 100px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Line, {\n    height: 200,\n    data: {\n      labels: tempHistoryCharLabels,\n      datasets: [{\n        label: 'temp',\n        data: tempHistoryCharData,\n        backgroundColor: function (context) {\n          let gradient = context.chart.ctx.createLinearGradient(0, 0, 0, 200);\n          gradient.addColorStop(0, 'rgba(244,67,54,0.5)');\n          gradient.addColorStop(1, 'rgba(244,67,54,0)');\n          return gradient;\n        },\n        pointBackgroundColor: 'red',\n        borderColor: 'red',\n        borderWidth: 0,\n        fill: true\n      }]\n    },\n    options: {\n      scales: {\n        xAxes: [{\n          display: false,\n          gridLines: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          display: true,\n          gridLines: {\n            color: props.theme == 1 ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            zeroLineColor: props.theme == 1 ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            drawTicks: false,\n            display: false\n          },\n          ticks: {\n            stepSize: 10,\n            padding: 10\n          }\n        }]\n      },\n      legend: {\n        display: true\n      },\n      maintainAspectRatio: false,\n      responsive: true\n      /*xAxes:[{\r\n        }]*/\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))));\n}\n\nfunction ex(props) {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  let nameData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/name\");\n  useEffect(() => {\n    nameData.on('value', data => {\n      setName(data.val());\n    });\n  }, []);\n  return __jsx(WithDrawerAppBar, {\n    component: Id,\n    title: name,\n    deviceId: id.toString(),\n    componentProps: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  });\n}\n\nexport default onlyDesktop(withAuth(ex));","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/pages/temperature/[id].tsx"],"names":["makeStyles","React","useEffect","useState","useRouter","Typography","Paper","withAuth","WithDrawerAppBar","Tempmeter","Termostat","firebase","Line","onlyDesktop","useStyle","theme","center","display","width","page","position","controllComponent","margin","padding","Id","props","classes","temp","setTemp","tempHistoryCharData","setTempHistoryCharData","tempHistoryCharLabels","setTempHistoryCharLabels","defTemp","setDefTemp","router","id","query","timeFormat","tempData","database","ref","user","tempHistoryData","targetTempData","termostatChange","value","set","on","data","val","charData","charLabels","Object","keys","forEach","key","push","time","once","maxWidth","labels","datasets","label","backgroundColor","context","gradient","chart","ctx","createLinearGradient","addColorStop","pointBackgroundColor","borderColor","borderWidth","fill","scales","xAxes","gridLines","yAxes","color","zeroLineColor","drawTicks","ticks","stepSize","legend","maintainAspectRatio","responsive","ex","name","setName","nameData","toString"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport useSWR from 'swr';\r\nimport {DatePicker,MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {orange} from \"@material-ui/core/colors\";\r\nimport {useRouter} from \"next/router\";\r\nimport {Typography,Paper} from \"@material-ui/core\";\r\nimport withAuth from \"../../components/WithAuth\";\r\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\r\nimport Tempmeter from \"../../components/Tempmeter\";\r\nimport Termostat from \"../../components/Termostat\";\r\nimport {auth, firebase} from \"../../firebase/index\";\r\nimport IPageProps from \"../../interfaces/IPageProps\";\r\nimport Loading from \"../../components/Loading\";\r\nimport {object, string} from \"prop-types\";\r\nimport {Line} from \"react-chartjs-2\";\r\nimport onlyDesktop from \"../../components/OnlyDesktop\";\r\nimport FireBackground from \"../../components/FireBackground\";\r\nimport {width} from \"@material-ui/system\";\r\nimport {url} from \"inspector\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    center:{\r\n        display:'flex',\r\n        width: 'calc(100% - 1px)'\r\n    },\r\n    page:{\r\n        width: '100%',\r\n        position: 'relative'\r\n    },\r\n    controllComponent:{\r\n        margin:'50px',\r\n        width:'min-content',\r\n        padding:'1rem'\r\n    }\r\n}));\r\n\r\nfunction Id(props:IPageProps) {\r\n    const classes = useStyle();\r\n    const [temp,setTemp] = useState<number>(-50);\r\n    const [tempHistoryCharData,setTempHistoryCharData] = useState<any>();\r\n    const [tempHistoryCharLabels,setTempHistoryCharLabels] = useState<any>();\r\n    const [defTemp,setDefTemp] = useState<number>();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const timeFormat = 'MM/DD/YYYY HH:mm';\r\n\r\n\r\n    let tempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/temp\");\r\n    let tempHistoryData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/history/temps\");\r\n    let targetTempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\");\r\n\r\n    const termostatChange = (value:number) => {\r\n        firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\").set(value);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        tempData.on('value',data=>{\r\n            setTemp(data.val());\r\n        });\r\n\r\n        tempHistoryData.on('value',data=>{\r\n            let charData:any[] = [];\r\n            let charLabels:any[] = [];\r\n            Object.keys(data.val()).forEach(key => {\r\n                charData.push(data.val()[key].temp);\r\n                charLabels.push(data.val()[key].time[1]+'/'+data.val()[key].time[2]+'/'+data.val()[key].time[0]+' '+data.val()[key].time[3]+':'+data.val()[key].time[4])\r\n            });\r\n\r\n            setTempHistoryCharData(charData);\r\n            setTempHistoryCharLabels(charLabels);\r\n        });\r\n\r\n        targetTempData.once('value',data=>{\r\n            setDefTemp(data.val());\r\n        });\r\n\r\n    },[]);\r\n\r\n return(\r\n     <div className={classes.page}>\r\n         <Typography component={\"h1\"} variant={\"h2\"}>\r\n             Teplota\r\n         </Typography>\r\n         <div className={classes.center}>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n                     <Tempmeter theme={props.theme} temp={temp}/>\r\n                 </Paper>\r\n             </div>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n                     <Termostat theme={props.theme} onValueChanged={termostatChange} defaultValue={defTemp}/>\r\n                 </Paper>\r\n             </div>\r\n         </div>\r\n         <div className={classes.center}>\r\n            <div className={classes.controllComponent} style={{width:'calc(100% - 100px)',maxWidth:' calc(100% - 100px)'}}>\r\n                    <Line height={200} data={{\r\n                        labels:tempHistoryCharLabels,\r\n                        datasets: [{\r\n                            label: 'temp',\r\n                            data: tempHistoryCharData,\r\n                            backgroundColor: function(context:any) {\r\n                                let gradient = context.chart.ctx.createLinearGradient(0, 0, 0, 200);\r\n                                gradient.addColorStop(0, 'rgba(244,67,54,0.5)');\r\n                                gradient.addColorStop(1, 'rgba(244,67,54,0)');\r\n                                return gradient;\r\n                            },\r\n                            pointBackgroundColor: 'red',\r\n                            borderColor: 'red',\r\n                            borderWidth: 0,\r\n                            fill:true\r\n                        }]\r\n                    }} options={{\r\n                        scales:{\r\n                            xAxes: [{\r\n                                display:false,\r\n                                gridLines: {\r\n                                    display: false,\r\n                                },\r\n                            }],\r\n                            yAxes: [{\r\n                                display:true,\r\n                                gridLines: {\r\n                                    color:props.theme==1?'rgba(255,255,255,0.1)':'rgba(0,0,0,0.1)',\r\n                                    zeroLineColor:props.theme==1?'rgba(255,255,255,0.1)':'rgba(0,0,0,0.1)',\r\n                                    drawTicks:false,\r\n                                    display:false\r\n                                },\r\n                                ticks: {\r\n                                    stepSize: 10,\r\n                                    padding:10\r\n                                }\r\n                            }],\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                        },\r\n                        maintainAspectRatio: false,\r\n                        responsive:true\r\n                        /*xAxes:[{\r\n\r\n                        }]*/\r\n                    }}/>\r\n            </div>\r\n         </div>\r\n     </div>\r\n )\r\n}\r\n\r\nfunction ex(props:IPageProps) {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const [name,setName] = useState(\"\");\r\n    let nameData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/name\");\r\n    useEffect(()=>{\r\n        nameData.on('value',data=>{\r\n            setName(data.val());\r\n        });\r\n    },[]);\r\n    return(\r\n        <WithDrawerAppBar component={Id} title={name} deviceId={id.toString()} componentProps={props}/>\r\n    )\r\n}\r\n\r\nexport default onlyDesktop(withAuth(ex));"]},"metadata":{},"sourceType":"module"}