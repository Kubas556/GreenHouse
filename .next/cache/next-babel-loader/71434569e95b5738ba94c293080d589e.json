{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport withAuth from \"../../components/WithAuth\";\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\nimport Tempmeter from \"../../components/Tempmeter\";\nimport Termostat from \"../../components/Termostat\";\nimport { firebase } from \"../../firebase/index\";\nimport { Line } from \"react-chartjs-2\";\nvar useStyle = makeStyles(function (theme) {\n  return {\n    center: {\n      display: 'flex',\n      width: 'calc(100% - 1px)'\n    },\n    page: {\n      width: '100%',\n      position: 'relative'\n    },\n    controllComponent: {\n      margin: '50px',\n      width: 'min-content',\n      padding: '1rem'\n    }\n  };\n});\n\nfunction Id(props) {\n  var classes = useStyle();\n\n  var _useState = useState(-50),\n      temp = _useState[0],\n      setTemp = _useState[1];\n\n  var _useState2 = useState(),\n      tempHistoryCharData = _useState2[0],\n      setTempHistoryCharData = _useState2[1];\n\n  var _useState3 = useState(),\n      tempHistoryCharLabels = _useState3[0],\n      setTempHistoryCharLabels = _useState3[1];\n\n  var _useState4 = useState(),\n      defTemp = _useState4[0],\n      setDefTemp = _useState4[1];\n\n  var router = useRouter();\n  var id = router.query.id;\n  var timeFormat = 'MM/DD/YYYY HH:mm';\n  var tempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/temp\");\n  var tempHistoryData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/history/temps\");\n  var targetTempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\");\n\n  var termostatChange = function termostatChange(value) {\n    firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\").set(value);\n  };\n\n  useEffect(function () {\n    tempData.on('value', function (data) {\n      setTemp(data.val());\n    });\n    tempHistoryData.on('value', function (data) {\n      var charData = [];\n      var charLabels = [];\n\n      _Object$keys(data.val()).forEach(function (key) {\n        charData.push(data.val()[key].temp);\n        charLabels.push(data.val()[key].time[1] + '/' + data.val()[key].time[2] + '/' + data.val()[key].time[0] + ' ' + data.val()[key].time[3] + ':' + data.val()[key].time[4]);\n      });\n\n      setTempHistoryCharData(charData);\n      setTempHistoryCharLabels(charLabels);\n    });\n    targetTempData.once('value', function (data) {\n      setDefTemp(data.val());\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.page\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h2\"\n  }, \"Teplota\"), __jsx(\"div\", {\n    className: classes.center\n  }, __jsx(\"div\", {\n    className: classes.controllComponent\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    }\n  }, __jsx(Tempmeter, {\n    theme: props.theme,\n    temp: temp\n  }))), __jsx(\"div\", {\n    className: classes.controllComponent\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    }\n  }, __jsx(Termostat, {\n    theme: props.theme,\n    onValueChanged: termostatChange,\n    defaultValue: defTemp\n  })))), __jsx(\"div\", {\n    className: classes.center\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    style: {\n      width: 'calc(100% - 100px)',\n      maxWidth: ' calc(100% - 100px)'\n    }\n  }, __jsx(Paper, null, __jsx(Line, {\n    height: 200,\n    data: {\n      labels: tempHistoryCharLabels,\n      datasets: [{\n        label: 'temp',\n        data: tempHistoryCharData,\n        backgroundColor: function backgroundColor(context) {\n          var gradient = context.chart.ctx.createLinearGradient(0, 0, 0, 200);\n          gradient.addColorStop(0, 'rgba(244,67,54,0.5)');\n          gradient.addColorStop(1, 'rgba(244,67,54,0)');\n          return gradient;\n        },\n        pointBackgroundColor: 'red',\n        borderColor: 'red',\n        borderWidth: 0,\n        fill: true\n      }]\n    },\n    options: {\n      scales: {\n        xAxes: [{\n          display: false,\n          gridLines: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          display: true,\n          gridLines: {\n            color: props.theme == 1 ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            zeroLineColor: props.theme == 1 ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            drawTicks: false,\n            display: false\n          },\n          ticks: {\n            stepSize: 10,\n            padding: 10\n          }\n        }]\n      },\n      legend: {\n        display: true\n      },\n      maintainAspectRatio: false,\n      responsive: true\n      /*xAxes:[{\r\n        }]*/\n\n    }\n  })))));\n}\n\nfunction ex(props) {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState5 = useState(\"\"),\n      name = _useState5[0],\n      setName = _useState5[1];\n\n  var nameData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/name\");\n  useEffect(function () {\n    nameData.on('value', function (data) {\n      setName(data.val());\n    });\n  }, []);\n  return __jsx(WithDrawerAppBar, {\n    component: Id,\n    title: name,\n    deviceId: id.toString(),\n    componentProps: props\n  });\n}\n\nexport default withAuth(ex);","map":null,"metadata":{},"sourceType":"module"}