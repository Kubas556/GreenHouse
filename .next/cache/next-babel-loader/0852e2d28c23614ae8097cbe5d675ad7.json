{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\components\\\\WithAuth.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport router from 'next/router';\nimport { auth } from '../firebase';\n\nconst withAuth = Component => {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        status: 'LOADING'\n      };\n    }\n\n    componentDidMount() {\n      auth.onAuthStateChanged(authUser => {\n        if (authUser) {\n          this.setState({\n            status: 'SIGNED_IN'\n          });\n        } else {\n          router.push('/login');\n        }\n      });\n    }\n\n    renderContent() {\n      // @ts-ignore\n      const {\n        status\n      } = this.state;\n\n      if (status == 'LOADING') {\n        return __jsx(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Loading ......\");\n      } else if (status == 'SIGNED_IN') {\n        // @ts-ignore\n        return __jsx(Component, _extends({\n          user: auth.currentUser.uid\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n      }\n    }\n\n    render() {\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.renderContent());\n    }\n\n  };\n};\n\nexport default withAuth;","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/components/WithAuth.tsx"],"names":["React","router","auth","withAuth","Component","constructor","props","state","status","componentDidMount","onAuthStateChanged","authUser","setState","push","renderContent","currentUser","uid","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAyD,OAAzD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,IAAT,QAAqB,aAArB;;AAGA,MAAMC,QAAQ,GAAIC,SAAD,IAAwC;AACrD,SAAO,cAAcJ,KAAK,CAACI,SAApB,CAA8B;AACjCC,IAAAA,WAAW,CAACC,KAAD,EAAY;AACnB,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACTC,QAAAA,MAAM,EAAE;AADC,OAAb;AAGH;;AACDC,IAAAA,iBAAiB,GAAG;AAChBP,MAAAA,IAAI,CAACQ,kBAAL,CAAwBC,QAAQ,IAAI;AAChC,YAAGA,QAAH,EAAa;AACT,eAAKC,QAAL,CAAc;AACVJ,YAAAA,MAAM,EAAE;AADE,WAAd;AAGH,SAJD,MAIM;AACFP,UAAAA,MAAM,CAACY,IAAP,CAAY,QAAZ;AACH;AACJ,OARD;AASH;;AACDC,IAAAA,aAAa,GAAG;AACZ;AACA,YAAM;AAAEN,QAAAA;AAAF,UAAa,KAAKD,KAAxB;;AACA,UAAGC,MAAM,IAAI,SAAb,EAAwB;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH,OAFD,MAEM,IAAGA,MAAM,IAAI,WAAb,EAA0B;AAC5B;AACA,eAAO,MAAC,SAAD;AAAW,UAAA,IAAI,EAAEN,IAAI,CAACa,WAAL,CAAiBC;AAAlC,WAA4C,KAAKV,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH;AACJ;;AACDW,IAAAA,MAAM,GAAG;AACL,aACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,aAAL,EADL,CADJ;AAKH;;AAlCgC,GAArC;AAoCH,CArCD;;AAsCA,eAAeX,QAAf","sourcesContent":["import React, {ReactComponentElement, ReactElement} from 'react';\r\nimport router from 'next/router';\r\nimport { auth } from '../firebase';\r\nimport {namedTypes} from \"ast-types\";\r\n\r\nconst withAuth = (Component:React.ComponentType<any>) => {\r\n    return class extends React.Component {\r\n        constructor(props:any) {\r\n            super(props);\r\n            this.state = {\r\n                status: 'LOADING',\r\n            };\r\n        }\r\n        componentDidMount() {\r\n            auth.onAuthStateChanged(authUser => {\r\n                if(authUser) {\r\n                    this.setState({\r\n                        status: 'SIGNED_IN'\r\n                    });\r\n                }else {\r\n                    router.push('/login');\r\n                }\r\n            });\r\n        }\r\n        renderContent() {\r\n            // @ts-ignore\r\n            const { status } = this.state;\r\n            if(status == 'LOADING') {\r\n                return <h1>Loading ......</h1>;\r\n            }else if(status == 'SIGNED_IN') {\r\n                // @ts-ignore\r\n                return <Component user={auth.currentUser.uid} { ...this.props } />\r\n            }\r\n        }\r\n        render() {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.renderContent()}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    };\r\n}\r\nexport default withAuth;"]},"metadata":{},"sourceType":"module"}