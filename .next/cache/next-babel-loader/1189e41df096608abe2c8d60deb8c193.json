{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { lightTheme, darkTheme } from '../components/Theme';\nimport CustomAppBar from \"../components/CustomAppBar\";\nimport { Switch, FormControlLabel, Box } from \"@material-ui/core\";\nexport default class MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: false,\n      showBtn: true,\n      session: null,\n      edit: 0\n    };\n    this.themeReg = /theme=(\\w+)/;\n    this.sessionReg = /sessionID-NEKRAST!=(\\w+)/;\n    this.editReg = /edit=(\\w+)/;\n  }\n\n  componentDidMount() {\n    const themeCookie = document.cookie.match(this.themeReg);\n    const sessionCookie = document.cookie.match(this.sessionReg);\n    const editCookie = document.cookie.match(this.editReg);\n    this.pathname = Router.pathname;\n    if (themeCookie) this.setState(state => {\n      return {\n        theme: JSON.parse(themeCookie[1])\n      };\n    });\n\n    if (sessionCookie) {\n      this.setState(state => {\n        return {\n          session: sessionCookie[1]\n        };\n      });\n    } else {\n      Router.push(\"/login\");\n    }\n\n    if (editCookie) {\n      this.setState(state => {\n        return {\n          edit: editCookie[1]\n        };\n      });\n    }\n\n    if (this.state.edit === 0 && (Router.pathname === \"/editroom\" || Router.pathname === \"/editperson\")) Router.push(\"/login\"); // Remove the server-side injected CSS.\n\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }\n\n  switchTheme() {\n    this.setState(state => {\n      document.cookie = 'theme=' + !this.state.theme;\n      return {\n        theme: !state.theme\n      };\n    });\n  }\n\n  toggleThemeSwitch(value) {\n    this.setState(state => {\n      return {\n        showBtn: value\n      };\n    });\n  }\n\n  changeSession(value) {\n    this.setState(state => {\n      document.cookie = \"sessionID-NEKRAST!=\" + value.session;\n      document.cookie = \"edit=\" + value.edit;\n      return {\n        session: value.session,\n        edit: value.edit\n      };\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"My page\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), __jsx(ThemeProvider, {\n      theme: this.state.theme ? darkTheme : lightTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), this.state.showBtn ? __jsx(CustomAppBar, {\n      text: \"Logged as: \" + this.state.session,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : null, __jsx(Box, {\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      session: this.state.session,\n      edit: this.state.edit,\n      changeSess: this.changeSession.bind(this),\n      setThemeBtn: this.toggleThemeSwitch.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), this.state.showBtn ? __jsx(FormControlLabel, {\n      labelPlacement: \"start\",\n      label: \"Dark mode\",\n      control: __jsx(Switch, {\n        checked: this.state.theme,\n        onChange: this.switchTheme.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : null));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP/pages/_app.js"],"names":["React","App","Head","Router","ThemeProvider","CssBaseline","lightTheme","darkTheme","CustomAppBar","Switch","FormControlLabel","Box","MyApp","constructor","props","state","theme","showBtn","session","edit","themeReg","sessionReg","editReg","componentDidMount","themeCookie","document","cookie","match","sessionCookie","editCookie","pathname","setState","JSON","parse","push","jssStyles","querySelector","parentElement","removeChild","switchTheme","toggleThemeSwitch","value","changeSession","render","Component","pageProps","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport App from 'next/app';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {lightTheme,darkTheme} from '../components/Theme';\r\nimport CustomAppBar from \"../components/CustomAppBar\";\r\nimport {Switch,FormControlLabel,Box} from \"@material-ui/core\";\r\n\r\nexport default class MyApp extends App {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {theme: false,showBtn:true,session:null,edit:0};\r\n        this.themeReg = /theme=(\\w+)/;\r\n        this.sessionReg = /sessionID-NEKRAST!=(\\w+)/;\r\n        this.editReg = /edit=(\\w+)/;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const themeCookie = document.cookie.match(this.themeReg);\r\n        const sessionCookie = document.cookie.match(this.sessionReg);\r\n        const editCookie = document.cookie.match(this.editReg);\r\n        this.pathname = Router.pathname;\r\n\r\n        if(themeCookie)\r\n            this.setState((state) => {\r\n                return {theme: JSON.parse(themeCookie[1])}\r\n            });\r\n\r\n        if(sessionCookie) {\r\n            this.setState((state) => {\r\n                return {session: sessionCookie[1]}\r\n            });\r\n        } else {\r\n            Router.push(\"/login\");\r\n        }\r\n\r\n        if(editCookie) {\r\n            this.setState((state) => {\r\n                return {edit: editCookie[1]}\r\n            });\r\n        }\r\n\r\n        if(this.state.edit===0 && (Router.pathname===\"/editroom\" || Router.pathname===\"/editperson\"))\r\n            Router.push(\"/login\");\r\n\r\n        // Remove the server-side injected CSS.\r\n        const jssStyles = document.querySelector('#jss-server-side');\r\n        if (jssStyles) {\r\n            jssStyles.parentElement.removeChild(jssStyles);\r\n        }\r\n    }\r\n\r\n    switchTheme(){\r\n        this.setState((state) => {\r\n            document.cookie = 'theme='+(!this.state.theme);\r\n            return {theme:!state.theme}\r\n        });\r\n    }\r\n\r\n    toggleThemeSwitch(value){\r\n        this.setState((state) => {\r\n            return {showBtn:value}\r\n        });\r\n    }\r\n\r\n    changeSession(value){\r\n        this.setState((state) => {\r\n            document.cookie = \"sessionID-NEKRAST!=\" + value.session;\r\n            document.cookie = \"edit=\"+value.edit;\r\n            return {session: value.session, edit: value.edit}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { Component, pageProps } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>My page</title>\r\n                    <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n                </Head>\r\n                <ThemeProvider theme={this.state.theme?darkTheme:lightTheme}>\r\n                    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n                    {/*<div style={\r\n                        {display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        height: \"100vh\"}\r\n                    }>*/}\r\n                    <CssBaseline />\r\n                    {this.state.showBtn?<CustomAppBar text={\"Logged as: \"+this.state.session}/>:null}\r\n                    <Box height={\"100%\"}>\r\n                        <Component {...pageProps} session={this.state.session} edit={this.state.edit} changeSess={this.changeSession.bind(this)} setThemeBtn={this.toggleThemeSwitch.bind(this)} />\r\n                    </Box>\r\n                    {this.state.showBtn?\r\n                        <FormControlLabel labelPlacement={\"start\"} label={\"Dark mode\"} control={<Switch checked={this.state.theme} onChange={this.switchTheme.bind(this)}/>}/>\r\n                        :null}\r\n                    {/*</div>*/}\r\n                </ThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}