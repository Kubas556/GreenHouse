{"ast":null,"code":"var __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport fetch from \"node-fetch\";\nimport useSWR from \"swr\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableContainer, Paper, FormControl, InputLabel, Select, MenuItem, Input, Chip, TextField, DialogActions, Button, Grid, Typography, DialogContentText, DialogContent, DialogTitle, Dialog } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    table: {\n      padding: \"5%\"\n    },\n    form: {\n      display: 'flex',\n      flexFlow: 'column'\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      margin: 2\n    },\n    field: {\n      margin: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(2)\n    },\n    removeBtn: {\n      margin: theme.spacing(2),\n      background: theme.status.danger,\n      '&:hover': {\n        background: theme.status.danger\n      }\n    }\n  };\n});\n\nfunction EditRoom(props) {\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _useState = useState(),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState(),\n      phone = _useState3[0],\n      setPhone = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      replaceid = _useState4[0],\n      setReplaceid = _useState4[1];\n\n  var _useState5 = useState(false),\n      opendialog = _useState5[0],\n      setOpendialog = _useState5[1];\n\n  function checkStatus(res) {\n    if (res.ok) {\n      // res.status >= 200 && res.status < 300\n      return res;\n    } else {\n      return {\n        json: function json() {\n          return {\n            error: res.status\n          };\n        }\n      };\n    }\n  }\n\n  var deleteRecord = function deleteRecord() {\n    fetch(\"http://a2017sedlja.delta-studenti.cz/projektAPI/odstranitmistnost.php?id=\" + props.query.id + \"&replaceid=\" + replaceid, {\n      method: 'POST',\n      headers: {\n        AUTHTOKEN: props.session\n      }\n    }).then(checkStatus).then(function (r) {\n      return r.json();\n    }).then(function (f) {\n      if (!f.error) router.back();\n    });\n  };\n\n  var submitChanges = function submitChanges() {\n    var params = new URLSearchParams();\n    params.append(\"name\", name);\n    params.append(\"number\", number);\n    params.append(\"phone\", phone);\n    fetch(\"http://a2017sedlja.delta-studenti.cz/projektAPI/upravitmistnost.php?id=\" + props.query.id, {\n      method: 'POST',\n      body: params,\n      headers: {\n        AUTHTOKEN: props.session\n      }\n    }).then(checkStatus).then(function (r) {\n      return r.json();\n    }).then(function (f) {\n      if (!f.error) router.back();\n    });\n  };\n\n  var _useState6 = useState(),\n      inputs = _useState6[0],\n      setInputs = _useState6[1];\n\n  useEffect(function () {\n    if (props.session != null) fetch(\"http://a2017sedlja.delta-studenti.cz/projektAPI/infomistnost.php?id=\" + props.query.id, {\n      method: 'GET',\n      headers: {\n        AUTHTOKEN: props.session\n      }\n    }).then(function (e) {\n      return e.json();\n    }).then(function (j) {\n      if (j !== undefined) {\n        var nameData = j[0][1];\n        var numberData = j[0][0];\n        var phoneData = j[0][2];\n        setName(nameData);\n        setNumber(numberData);\n        setPhone(phoneData);\n        setInputs({\n          name: __jsx(TextField, {\n            className: classes.field,\n            onChange: function onChange(e) {\n              setName(e.target.value);\n            },\n            required: true,\n            type: \"text\",\n            id: \"name\",\n            label: \"room name\",\n            defaultValue: nameData\n          }),\n          number: __jsx(TextField, {\n            className: classes.field,\n            onChange: function onChange(e) {\n              setNumber(e.target.value);\n            },\n            required: true,\n            type: \"number\",\n            id: \"number\",\n            label: \"room number\",\n            defaultValue: numberData\n          }),\n          phone: __jsx(TextField, {\n            className: classes.field,\n            onChange: function onChange(e) {\n              setPhone(e.target.value);\n            },\n            type: \"number\",\n            id: \"phone\",\n            label: \"room phone\",\n            defaultValue: phoneData\n          })\n        });\n      }\n    });\n  }, [props.session]);\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.table\n  }, __jsx(Typography, {\n    className: classes.header,\n    variant: \"h4\"\n  }, \"Room ID: \" + router.query.id), __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      submitChanges();\n    }\n  }, inputs ? inputs.name : __jsx(\"a\", null, \"loading\"), inputs ? inputs.number : __jsx(\"a\", null, \"loading\"), inputs ? inputs.phone : __jsx(\"a\", null, \"loading\"), __jsx(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    id: \"submit-btn\",\n    type: \"submit\"\n  })), __jsx(\"label\", {\n    htmlFor: \"submit-btn\"\n  }, __jsx(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\"\n  }, \"Save\")), __jsx(\"label\", null, __jsx(Button, {\n    onClick: function onClick() {\n      return setOpendialog(true);\n    },\n    className: classes.removeBtn,\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: __jsx(DeleteIcon, null),\n    component: \"span\"\n  }, \"Delete\"))), __jsx(Dialog, {\n    open: opendialog,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Replacement for this room\"), __jsx(DialogContent, null, __jsx(DialogContentText, null, \"To delete this room, you first must set new ID for all people who works there.\"), __jsx(TextField, {\n    defaultValue: replaceid,\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"replaceid\",\n    label: \"New ID\",\n    type: \"number\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return setReplaceid(e.target.value);\n    }\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: function onClick() {\n      return setOpendialog(false);\n    },\n    color: \"primary\"\n  }, \"Cancel\"), __jsx(Button, {\n    disabled: replaceid == \"\" ? true : false,\n    onClick: deleteRecord,\n    color: \"primary\"\n  }, \"Delete\"))), __jsx(\"p\", null, \"Hello Next.js\"));\n}\n\nEditRoom.getInitialProps = function (_ref) {\n  var query = _ref.query;\n  return {\n    query: query\n  };\n};\n\nexport default EditRoom;","map":null,"metadata":{},"sourceType":"module"}