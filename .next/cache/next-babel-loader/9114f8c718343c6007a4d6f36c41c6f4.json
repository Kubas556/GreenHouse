{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport anime from \"animejs\";\nimport { firebase } from \"../firebase/index\";\n\nfunction Tempmeter(props) {\n  const maxHeight = 8;\n  const minHeight = 215;\n  const height = minHeight - maxHeight;\n  const maxTemp = 50;\n  const minTemp = -50; //const range = Math.abs(minTemp)+maxTemp;\n\n  let temp = props.temp;\n  let rangeVal = temp >= 0 ? 50 / maxTemp * temp + 50 : 50 - 50 / Math.abs(minTemp) * Math.abs(temp);\n  let y = height - (height / 100 * rangeVal - 8);\n  const text = useRef();\n  const tempValue = useRef();\n  const textLine = useRef();\n  const water = useRef();\n  const duration = 5000;\n  const easing = \"spring(1, 82, 12, 0)\";\n  const {\n    0: prevText,\n    1: setPrevtext\n  } = useState(minTemp);\n  useEffect(() => {\n    var textAnim = {\n      text: prevText\n    };\n    anime({\n      targets: textAnim,\n      text: temp,\n      duration: duration,\n      easing: easing,\n      round: 1,\n      update: function () {\n        text.current.innerHTML = textAnim.text + \"Â°C\";\n      },\n      complete: function (anim) {\n        setPrevtext(temp);\n      }\n    });\n    anime({\n      targets: tempValue.current,\n      y2: y,\n      duration: duration,\n      easing: easing,\n      update: function () {}\n    });\n    anime({\n      targets: textLine.current,\n      y2: y,\n      y1: y,\n      duration: duration,\n      easing: easing,\n      update: function () {}\n    });\n    anime({\n      targets: text.current,\n      transform: \"translate(33.17 \" + (y - 2.77) + \")\",\n      duration: duration,\n      easing: easing,\n      update: function () {}\n    });\n    anime({\n      targets: water.current,\n      d: \"M 0.14 16.09 C 0.14 16.09 21.14 20.25 22.49 12.8 C 23.84 5.35 17.37 0.13 9.87 0.13 C 2.37 0.13 0.14 16.09 0.14 16.09 Z\",\n      duration: 1000,\n      easing: 'linear',\n      direction: 'alternate',\n      loop: true\n    });\n  }, [props.temp]);\n  return __jsx(\"div\", null, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100\",\n    viewBox: \"0 0 61.02 246.88\"\n  }, __jsx(\"defs\", null, __jsx(\"style\", null, \".cls-1,.cls-3,.cls-5{fill:none;stroke-miterlimit:10;}.cls-1{stroke:\" + (props.theme == 1 ? \"white\" : \"black\") + \";stroke-width:0.25px;}.cls-2{fill:#4950f5;}.cls-3{stroke:#4950f5;stroke-linecap:round;stroke-width:7px;}.cls-4{font-size:12px;fill:\" + (props.theme == 1 ? \"white\" : \"black\") + \";font-family:CenturyGothic, Century Gothic;}.cls-5{stroke:#1d1d1b;clip-path:url(#clip-path);}\"), __jsx(\"clipPath\", {\n    id: \"clip-path\"\n  }, __jsx(\"circle\", {\n    className: \"cls-1\",\n    cx: \"16.65\",\n    cy: \"230.23\",\n    r: \"12.65\"\n  }))), __jsx(\"title\", null, \"Datov\\xFD zdroj 2\"), __jsx(\"g\", {\n    id: \"Vrstva_2\",\n    \"data-name\": \"Vrstva 2\"\n  }, __jsx(\"g\", {\n    id: \"Vrstva_2-2\",\n    \"data-name\": \"Vrstva 2\"\n  }, __jsx(\"path\", {\n    className: \"cls-1\",\n    d: \"M23.88,215.39a16.51,16.51,0,1,1-14.46,0\"\n  }), __jsx(\"circle\", {\n    className: \"cls-2\",\n    cx: \"16.65\",\n    cy: \"230.23\",\n    r: \"12.65\"\n  }), __jsx(\"path\", {\n    className: \"cls-1\",\n    d: \"M23.88,215.39V7.35A7.23,7.23,0,0,0,16.65.13h0A7.23,7.23,0,0,0,9.42,7.35v208\"\n  }), __jsx(\"line\", {\n    ref: tempValue,\n    className: \"cls-3\",\n    x1: \"16.65\",\n    y1: \"230.23\",\n    x2: \"16.64\",\n    y2: minHeight\n  }), __jsx(\"line\", {\n    ref: textLine,\n    className: \"cls-1\",\n    x1: \"60.39\",\n    y1: minHeight,\n    x2: \"16.65\",\n    y2: minHeight\n  }), __jsx(\"text\", {\n    ref: text,\n    className: \"cls-4\",\n    transform: \"translate(33.17 \" + (minHeight - 2.77) + \")\"\n  }, \"Waiting...\")))));\n}\n\nexport default Tempmeter;","map":null,"metadata":{},"sourceType":"module"}