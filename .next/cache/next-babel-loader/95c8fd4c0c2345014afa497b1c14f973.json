{"ast":null,"code":"var __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport withAuth from \"../../components/WithAuth\";\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\nimport { firebase } from \"../../firebase/index\";\nimport { Line } from \"react-chartjs-2\";\nimport SoilHumidity from \"../../components/SoilHumidity\";\nimport AirHumidity from \"../../components/AirHumidity\";\nconst useStyle = makeStyles(theme => ({\n  center: {\n    display: 'flex',\n    width: 'calc(100% - 1px)'\n  },\n  page: {\n    width: '100%',\n    position: 'relative'\n  },\n  controllComponent: {\n    margin: '50px',\n    width: 'min-content',\n    padding: '1rem'\n  }\n}));\n\nfunction Id(props) {\n  const classes = useStyle();\n  const {\n    0: soilHumidity,\n    1: setSoilHumidity\n  } = useState(0);\n  const {\n    0: airHumidity,\n    1: setAirHumidity\n  } = useState(0);\n  const {\n    0: airHumidityHistoryCharData,\n    1: setAirHumidityHistoryCharData\n  } = useState();\n  const {\n    0: aitHumidityHistoryCharLabels,\n    1: setAirHumidityHistoryCharLabels\n  } = useState();\n  const {\n    0: defTemp,\n    1: setDefTemp\n  } = useState();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const timeFormat = 'MM/DD/YYYY HH:mm';\n  let soilHumidityData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/soilHumidity\");\n  let airHumidityData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/airHumidity\");\n  let humidityHistoryData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/history/airHumidity\"); //let targetTempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\");\n\n  const termostatChange = value => {\n    firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\").set(value);\n  };\n\n  useEffect(() => {\n    soilHumidityData.on('value', data => {\n      setSoilHumidity(data.val());\n    });\n    airHumidityData.on('value', data => {\n      setAirHumidity(data.val());\n    });\n    humidityHistoryData.on('value', data => {\n      let charData = [];\n      let charLabels = [];\n      Object.keys(data.val()).forEach(key => {\n        charData.push(data.val()[key].value);\n        charLabels.push(data.val()[key].time[1] + '/' + data.val()[key].time[2] + '/' + data.val()[key].time[0] + ' ' + data.val()[key].time[3] + ':' + data.val()[key].time[4]);\n      });\n      setAirHumidityHistoryCharData(charData);\n      setAirHumidityHistoryCharLabels(charLabels);\n    });\n    /*targetTempData.once('value',data=>{\r\n        setDefTemp(data.val());\r\n    });*/\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.page\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h2\"\n  }, \"Zavla\\u017Eov\\xE1n\\xED\"), __jsx(\"div\", {\n    className: classes.center\n  }, __jsx(\"div\", {\n    className: classes.controllComponent\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    }\n  }, __jsx(SoilHumidity, {\n    theme: props.theme,\n    value: soilHumidity\n  }))), __jsx(\"div\", {\n    className: classes.controllComponent\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    }\n  }, __jsx(AirHumidity, {\n    theme: props.theme,\n    value: airHumidity\n  })))), __jsx(\"div\", {\n    className: classes.center\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    style: {\n      width: 'calc(100% - 100px)'\n    }\n  }, __jsx(Paper, null, __jsx(Line, {\n    height: 200,\n    data: {\n      labels: aitHumidityHistoryCharLabels,\n      datasets: [{\n        label: 'value',\n        data: airHumidityHistoryCharData,\n        backgroundColor: function (context) {\n          let gradient = context.chart.ctx.createLinearGradient(0, 0, 0, 200);\n          gradient.addColorStop(0, 'rgba(24,184,212,0.5)');\n          gradient.addColorStop(1, 'rgba(24,184,212,0)');\n          return gradient;\n        },\n        pointBackgroundColor: 'rgb(24,184,212)',\n        borderColor: 'rgb(24,184,212)',\n        borderWidth: 0,\n        fill: true\n      }]\n    },\n    options: {\n      scales: {\n        xAxes: [{\n          display: false,\n          gridLines: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          display: true,\n          gridLines: {\n            color: props.theme == 1 ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            zeroLineColor: props.theme == 1 ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',\n            drawTicks: false,\n            display: false\n          },\n          ticks: {\n            stepSize: 10,\n            padding: 10\n          }\n        }]\n      },\n      legend: {\n        display: true\n      },\n      maintainAspectRatio: false\n    }\n  })))));\n}\n\nfunction ex2(props) {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  let nameData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/name\");\n  useEffect(() => {\n    nameData.on('value', data => {\n      setName(data.val());\n    });\n  }, []);\n  return __jsx(WithDrawerAppBar, {\n    component: Id,\n    title: name,\n    deviceId: id.toString(),\n    componentProps: props\n  });\n}\n\nexport default withAuth(ex2);","map":null,"metadata":{},"sourceType":"module"}