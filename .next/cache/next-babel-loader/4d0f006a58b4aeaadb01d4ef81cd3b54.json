{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { lightTheme, darkTheme } from '../components/Theme';\nimport CustomAppBar from \"../components/CustomAppBar\";\nimport { Switch, FormControlLabel, Box } from \"@material-ui/core\";\nimport { auth } from '../firebase/index';\nexport default class MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: false,\n      status: \"LOADING\",\n      showBtn: true\n    };\n    this.themeReg = /theme=(\\w+)/;\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged(authUser => {\n      console.log(authUser);\n\n      if (authUser) {\n        this.setState({\n          status: 'SIGNED_IN'\n        });\n      } else {\n        Router.push({\n          pathname: \"/login\",\n          query: {\n            refresh: 'false'\n          }\n        });\n      }\n    }); // Remove the server-side injected CSS.\n\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }\n\n  switchTheme() {\n    this.setState(state => {\n      document.cookie = 'theme=' + !this.state.theme;\n      return {\n        theme: !state.theme\n      };\n    });\n  }\n\n  toggleThemeSwitch(value) {\n    this.setState(state => {\n      return {\n        showBtn: value\n      };\n    });\n  }\n\n  changeSession(value) {\n    this.setState(state => {\n      document.cookie = \"sessionID-NEKRAST!=\" + value.session;\n      document.cookie = \"edit=\" + value.edit;\n      return {\n        session: value.session,\n        edit: value.edit\n      };\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"My page\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), __jsx(ThemeProvider, {\n      theme: this.state.theme ? darkTheme : lightTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), this.state.showBtn ? __jsx(CustomAppBar, {\n      text: \"Some name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : null, __jsx(Box, {\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      session: this.state.session,\n      edit: this.state.edit,\n      changeSess: this.changeSession.bind(this),\n      setThemeBtn: this.toggleThemeSwitch.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), this.state.showBtn ? __jsx(FormControlLabel, {\n      labelPlacement: \"start\",\n      label: \"Dark mode\",\n      control: __jsx(Switch, {\n        checked: this.state.theme,\n        onChange: this.switchTheme.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : null));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP/pages/_app.js"],"names":["React","App","Head","Router","ThemeProvider","CssBaseline","lightTheme","darkTheme","CustomAppBar","Switch","FormControlLabel","Box","auth","MyApp","constructor","props","state","theme","status","showBtn","themeReg","componentDidMount","onAuthStateChanged","authUser","console","log","setState","push","pathname","query","refresh","jssStyles","document","querySelector","parentElement","removeChild","switchTheme","cookie","toggleThemeSwitch","value","changeSession","session","edit","render","Component","pageProps","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport App from 'next/app';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {lightTheme,darkTheme} from '../components/Theme';\r\nimport CustomAppBar from \"../components/CustomAppBar\";\r\nimport {Switch,FormControlLabel,Box} from \"@material-ui/core\";\r\nimport {auth} from '../firebase/index';\r\n\r\nexport default class MyApp extends App {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {theme: false,status:\"LOADING\",showBtn:true};\r\n        this.themeReg = /theme=(\\w+)/;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        auth.onAuthStateChanged(authUser => {\r\n            console.log(authUser);\r\n            if(authUser) {\r\n                this.setState({\r\n                    status: 'SIGNED_IN'\r\n                });\r\n            } else {\r\n                Router.push({pathname:\"/login\", query:{refresh:'false'}});\r\n            }\r\n        });\r\n\r\n        // Remove the server-side injected CSS.\r\n        const jssStyles = document.querySelector('#jss-server-side');\r\n        if (jssStyles) {\r\n            jssStyles.parentElement.removeChild(jssStyles);\r\n        }\r\n    }\r\n\r\n    switchTheme(){\r\n        this.setState((state) => {\r\n            document.cookie = 'theme='+(!this.state.theme);\r\n            return {theme:!state.theme}\r\n        });\r\n    }\r\n\r\n    toggleThemeSwitch(value){\r\n        this.setState((state) => {\r\n            return {showBtn:value}\r\n        });\r\n    }\r\n\r\n    changeSession(value){\r\n        this.setState((state) => {\r\n            document.cookie = \"sessionID-NEKRAST!=\" + value.session;\r\n            document.cookie = \"edit=\"+value.edit;\r\n            return {session: value.session, edit: value.edit}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { Component, pageProps } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>My page</title>\r\n                    <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n                </Head>\r\n                <ThemeProvider theme={this.state.theme?darkTheme:lightTheme}>\r\n                    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n                    {/*<div style={\r\n                        {display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        height: \"100vh\"}\r\n                    }>*/}\r\n                    <CssBaseline />\r\n                    {this.state.showBtn?<CustomAppBar text={\"Some name\"}/>:null}\r\n                    <Box height={\"100%\"}>\r\n                        <Component {...pageProps} session={this.state.session} edit={this.state.edit} changeSess={this.changeSession.bind(this)} setThemeBtn={this.toggleThemeSwitch.bind(this)} />\r\n                    </Box>\r\n                    {this.state.showBtn?\r\n                        <FormControlLabel labelPlacement={\"start\"} label={\"Dark mode\"} control={<Switch checked={this.state.theme} onChange={this.switchTheme.bind(this)}/>}/>\r\n                        :null}\r\n                    {/*</div>*/}\r\n                </ThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}