{"version":3,"file":"static/webpack/static\\development\\pages\\irrigation\\[id].js.e7c18544e700c8548ef3.hot-update.js","sources":["webpack:///./pages/irrigation/.tsx"],"sourcesContent":["import Link from \"next/link\";\r\nimport useSWR from 'swr';\r\nimport {DatePicker,MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {orange} from \"@material-ui/core/colors\";\r\nimport {useRouter} from \"next/router\";\r\nimport {Typography,Paper} from \"@material-ui/core\";\r\nimport withAuth from \"../../components/WithAuth\";\r\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\r\nimport Tempmeter from \"../../components/Tempmeter\";\r\nimport Termostat from \"../../components/Termostat\";\r\nimport {auth, firebase} from \"../../firebase/index\";\r\nimport IPageProps from \"../../interfaces/IPageProps\";\r\nimport Loading from \"../../components/Loading\";\r\nimport {object, string} from \"prop-types\";\r\nimport {Line} from \"react-chartjs-2\";\r\nimport onlyDesktop from \"../../components/OnlyDesktop\";\r\nimport FireBackground from \"../../components/FireBackground\";\r\nimport {width} from \"@material-ui/system\";\r\nimport {url} from \"inspector\";\r\nimport SoilHumidity from \"../../components/SoilHumidity\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    center:{\r\n        display:'flex'\r\n    },\r\n    controllComponent:{\r\n        margin:'50px',\r\n        width:'min-content',\r\n        padding:'1rem'\r\n    }\r\n}));\r\n\r\nfunction Id(props:IPageProps) {\r\n    const classes = useStyle();\r\n    const [soilHumidity,setSoilHumidity] = useState<number>(0);\r\n    const [tempHistoryCharData,setTempHistoryCharData] = useState<any>();\r\n    const [tempHistoryCharLabels,setTempHistoryCharLabels] = useState<any>();\r\n    const [defTemp,setDefTemp] = useState<number>();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const timeFormat = 'MM/DD/YYYY HH:mm';\r\n\r\n\r\n    let soilHumidityData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/airHumidity\");\r\n    let humidityHistoryData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/humiditys\");\r\n    //let targetTempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\");\r\n\r\n    const termostatChange = (value:number) => {\r\n        firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\").set(value);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        soilHumidityData.on('value',data=>{\r\n            setSoilHumidity(data.val());\r\n        });\r\n\r\n        /*humidityHistoryData.on('value',data=>{\r\n            let charData:any[] = [];\r\n            let charLabels:any[] = [];\r\n            Object.keys(data.val()).forEach(key => {\r\n                charData.push(data.val()[key].temp);\r\n                charLabels.push(data.val()[key].time[1]+'/'+data.val()[key].time[2]+'/'+data.val()[key].time[0]+' '+data.val()[key].time[3]+':'+data.val()[key].time[4])\r\n            });\r\n\r\n            setTempHistoryCharData(charData);\r\n            setTempHistoryCharLabels(charLabels);\r\n        });*/\r\n\r\n        /*targetTempData.once('value',data=>{\r\n            setDefTemp(data.val());\r\n        });*/\r\n\r\n    },[]);\r\n\r\n return(\r\n     <div>\r\n         <Typography component={\"h1\"} variant={\"h2\"}>\r\n             Zavlažování\r\n         </Typography>\r\n         <div className={classes.center}>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n                     <SoilHumidity theme={props.theme} value={soilHumidity}/>\r\n                 </Paper>\r\n             </div>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n\r\n                 </Paper>\r\n             </div>\r\n         </div>\r\n         <div className={classes.center}>\r\n            <div className={classes.controllComponent} style={{width:'calc(100% - 100px)'}}>\r\n                <Paper>\r\n                    <Line data={{\r\n                        labels:tempHistoryCharLabels,\r\n                        datasets: [{\r\n                            label: 'temp',\r\n                            data: tempHistoryCharData,\r\n                            backgroundColor: 'rgba(0,0,0,0)',\r\n                            pointBackgroundColor: 'red',\r\n                            borderColor: 'red',\r\n                            borderWidth: 0\r\n                        }]\r\n                    }} options={{\r\n                        scales:{\r\n                            xAxes: [{\r\n                                gridLines: {\r\n                                    display: false,\r\n                                },\r\n                            }],\r\n                            yAxes: [{\r\n                                gridLines: {\r\n                                    color:props.theme==1?'rgba(255,255,255,0.1)':'rgba(0,0,0,0.1)',\r\n                                    zeroLineColor:props.theme==1?'rgba(255,255,255,0.1)':'rgba(0,0,0,0.1)',\r\n                                    drawTicks:false,\r\n                                },\r\n                                ticks: {\r\n                                    stepSize: 10,\r\n                                    padding:10\r\n                                }\r\n                            }],\r\n                        },\r\n                        maintainAspectRatio: false,\r\n                        /*xAxes:[{\r\n\r\n                        }]*/\r\n                    }}/>\r\n                </Paper>\r\n            </div>\r\n         </div>\r\n     </div>\r\n )\r\n}\r\n\r\nfunction ex(props:IPageProps) {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const [name,setName] = useState(\"\");\r\n    let nameData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/name\");\r\n    useEffect(()=>{\r\n        nameData.on('value',data=>{\r\n            setName(data.val());\r\n        });\r\n    },[]);\r\n    return(\r\n        <WithDrawerAppBar component={Id} title={name} deviceId={id.toString()} componentProps={props}/>\r\n    )\r\n}\r\n\r\nexport default onlyDesktop(withAuth(ex));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAIA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAJA;AAAA;AACA;AAUA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AANA;AAQA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AAYA;;;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AANA;AANA;AAkBA;AACA;;;AApBA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCA;AACA;AACA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;A","sourceRoot":""}