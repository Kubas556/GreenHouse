{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\pages\\\\_document.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport { lightTheme } from '../components/Theme';\nexport default class MyDocument extends Document {\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: lightTheme.palette.primary.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })), __jsx(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), __jsx(NextScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })));\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(__jsx(App, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n  });\n};","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/pages/_document.js"],"names":["React","Document","Head","Main","NextScript","ServerStyleSheets","lightTheme","MyDocument","render","palette","primary","main","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","Children","toArray","getStyleElement"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AAEA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAC7CO,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEF,UAAU,CAACG,OAAX,CAAmBC,OAAnB,CAA2BC,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AACI,MAAA,GAAG,EAAC,YADR;AAEI,MAAA,IAAI,EAAC,6EAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CATA,CADJ;AAgBH;;AAlB4C;;AAqBjDJ,UAAU,CAACK,eAAX,GAA6B,MAAMC,GAAN,IAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIT,iBAAJ,EAAf;AACA,QAAMU,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MACbD,kBAAkB,CAAC;AACfE,IAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,MAAM,CAACM,OAAP,CAAe,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;AADb,GAAD,CADtB;;AAKA,QAAME,YAAY,GAAG,MAAMpB,QAAQ,CAACW,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,2BACOQ,YADP;AAEI;AACAC,IAAAA,MAAM,EAAE,CAAC,GAAGtB,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBH,YAAY,CAACC,MAApC,CAAJ,EAAiDR,MAAM,CAACW,eAAP,EAAjD;AAHZ;AAKH,CAvCD","sourcesContent":["import React from 'react';\r\nimport Document, { Head, Main, NextScript } from 'next/document';\r\nimport { ServerStyleSheets } from '@material-ui/core/styles';\r\nimport {lightTheme} from '../components/Theme';\r\n\r\nexport default class MyDocument extends Document {\r\n    render() {\r\n        return (\r\n            <html lang=\"en\">\r\n            <Head>\r\n                {/* PWA primary color */}\r\n                <meta name=\"theme-color\" content={lightTheme.palette.primary.main} />\r\n                <link\r\n                    rel=\"stylesheet\"\r\n                    href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n                />\r\n            </Head>\r\n            <body>\r\n            <Main />\r\n            <NextScript />\r\n            </body>\r\n            </html>\r\n        );\r\n    }\r\n}\r\n\r\nMyDocument.getInitialProps = async ctx => {\r\n    // Resolution order\r\n    //\r\n    // On the server:\r\n    // 1. app.getInitialProps\r\n    // 2. page.getInitialProps\r\n    // 3. document.getInitialProps\r\n    // 4. app.render\r\n    // 5. page.render\r\n    // 6. document.render\r\n    //\r\n    // On the server with error:\r\n    // 1. document.getInitialProps\r\n    // 2. app.render\r\n    // 3. page.render\r\n    // 4. document.render\r\n    //\r\n    // On the client\r\n    // 1. app.getInitialProps\r\n    // 2. page.getInitialProps\r\n    // 3. app.render\r\n    // 4. page.render\r\n\r\n    // Render app and page and get the context of the page with collected side effects.\r\n    const sheets = new ServerStyleSheets();\r\n    const originalRenderPage = ctx.renderPage;\r\n\r\n    ctx.renderPage = () =>\r\n        originalRenderPage({\r\n            enhanceApp: App => props => sheets.collect(<App {...props} />),\r\n        });\r\n\r\n    const initialProps = await Document.getInitialProps(ctx);\r\n\r\n    return {\r\n        ...initialProps,\r\n        // Styles fragment is rendered after the app and page rendering finish.\r\n        styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}