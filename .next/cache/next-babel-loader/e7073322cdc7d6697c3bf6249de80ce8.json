{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AppBar, Tooltip, Button, IconButton, Toolbar, Typography, Divider, Drawer, List, ListItem, ListItemIcon, ListItemText, Avatar, Menu, MenuItem } from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/menu';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Link from 'next/link';\nimport React, { useRef, useState } from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { auth } from \"../firebase/index\";\nimport TempIcon from \"../icons/tempIcon\";\nimport WaterCanIconFilled from \"../icons/waterCanIconFilled\";\nimport FertilizerIcon from \"../icons/fertilizerIcon\";\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\nimport Router from \"next/router\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  avatarIcon: {\n    cursor: \"pointer\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  appBar: {\n    background: theme.palette.type == \"dark\" ? theme.palette.background.paper : theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: 240,\n    width: `calc(100% - ${240}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 0\n  },\n  tabs: {\n    flexGrow: 1,\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(2)\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n    overflow: 'hidden',\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    width: 240,\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1)\n  },\n  toolbarOffset: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function WithDrawerAppBar(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const {\n    0: avatarOpen,\n    1: setAvatarOpen\n  } = useState(false);\n  const avatarAnchor = useRef(null);\n  const devId = props.deviceId;\n  const Component = props.component;\n  const compProps = props.componentProps;\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleLogout = () => {\n    auth.signOut().then(function () {\n      alert('Logout successful');\n    }).catch(function (error) {\n      alert('OOps something went wrong check your console');\n      console.log(error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    })\n  }, __jsx(Toolbar, {\n    variant: \"dense\"\n  }, __jsx(IconButton, {\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, {\n      [classes.hide]: open\n    }),\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\"\n  }, __jsx(MenuIcon, null)), __jsx(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    noWrap: true,\n    component: \"div\"\n  }, props.title), __jsx(\"div\", {\n    className: classes.grow\n  }), __jsx(IconButton, {\n    onClick: compProps.switchTheme,\n    \"aria-label\": \"display more actions\",\n    color: \"inherit\"\n  }, compProps.theme === true ? __jsx(Brightness7Icon, null) : __jsx(Brightness4Icon, null)), auth.currentUser ? __jsx(\"div\", {\n    ref: avatarAnchor\n  }, __jsx(Avatar, {\n    onClick: () => setAvatarOpen(true),\n    className: classes.avatarIcon\n  }), __jsx(Menu, {\n    open: avatarOpen,\n    onClick: () => setAvatarOpen(false),\n    anchorEl: avatarAnchor.current\n  }, __jsx(MenuItem, null, \"Profile\"), __jsx(MenuItem, {\n    onClick: handleLogout\n  }, \"Log Out\"))) : __jsx(IconButton, {\n    onClick: () => Router.push(\"/login\"),\n    \"aria-label\": \"display more actions\",\n    color: \"inherit\"\n  }, __jsx(VpnKeyIcon, null)))), __jsx(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, {\n      [classes.drawerOpen]: open,\n      [classes.drawerClose]: !open\n    }),\n    classes: {\n      paper: clsx({\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      })\n    }\n  }, __jsx(\"div\", {\n    className: classes.toolbar\n  }, __jsx(IconButton, {\n    onClick: handleDrawerClose\n  }, theme.direction === 'rtl' ? __jsx(ChevronRightIcon, null) : __jsx(ChevronLeftIcon, null))), __jsx(Divider, null), __jsx(List, null, __jsx(Link, {\n    href: \"/temperature/\" + devId\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(TempIcon, null)), __jsx(ListItemText, {\n    primary: \"Teplota\"\n  }))), __jsx(Link, {\n    href: \"/irrigation\"\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(WaterCanIconFilled, null)), __jsx(ListItemText, {\n    primary: \"Zavlažování\"\n  }))), __jsx(Link, {\n    href: \"/fertilization\"\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(FertilizerIcon, null)), __jsx(ListItemText, {\n    primary: \"Hnojení\"\n  })))), __jsx(Divider, null), __jsx(List, {\n    style: {\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    }\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(ShowChartIcon, null)), __jsx(ListItemText, {\n    primary: \"Statistiky\"\n  })), __jsx(\"div\", {\n    className: classes.grow\n  }), __jsx(ListItem, {\n    style: {\n      padding: \"2px\"\n    }\n  }, __jsx(Tooltip, {\n    title: \"Zp\\u011Bt na list\",\n    \"aria-label\": \"add\"\n  }, __jsx(Button, {\n    variant: \"contained\",\n    onClick: () => Router.push(\"/\"),\n    startIcon: __jsx(ArrowBackIcon, null),\n    color: \"secondary\"\n  }))))), __jsx(\"main\", {\n    className: classes.content\n  }, __jsx(\"div\", {\n    className: classes.toolbarOffset\n  }), __jsx(Component, compProps)));\n}","map":null,"metadata":{},"sourceType":"module"}