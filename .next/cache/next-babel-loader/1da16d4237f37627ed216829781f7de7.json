{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP\\\\components\\\\CustomAppBar.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AppBar, Tabs, Tab, IconButton, Toolbar, Typography, Divider, Drawer, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/menu';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport ApartmentIcon from '@material-ui/icons/Apartment';\nimport PersonPinIcon from '@material-ui/icons/Person';\nimport Link from 'next/link';\nimport React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { auth } from \"../firebase/index\";\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    background: theme.palette.background.paper,\n    color: theme.palette.text.primary\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 0\n  },\n  tabs: {\n    flexGrow: 1,\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(2)\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    width: 240,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar)\n}));\nexport default function CustomAppBar(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [value, setValue] = React.useState(0);\n\n  const handleLogout = () => {\n    auth.signOut().then(function () {\n      alert('Logout successful');\n    }).catch(function (error) {\n      alert('OOps something went wrong check your console');\n      console.log(err);\n    });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    position: \"static\",\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    variant: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), __jsx(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    noWrap: true,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, props.text), __jsx(Link, {\n    href: {\n      pathname: \"/login\",\n      query: {\n        refresh: 'false'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"display more actions\",\n    edge: \"end\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(VpnKeyIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), __jsx(IconButton, {\n    onClick: handleLogout,\n    \"aria-label\": \"display more actions\",\n    edge: \"end\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(VpnKeyIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })))), __jsx(Drawer, {\n    variant: \"permanent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? __jsx(ChevronRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }) : __jsx(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => __jsx(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, index % 2 === 0 ? __jsx(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }) : __jsx(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })))), __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, ['All mail', 'Trash', 'Spam'].map((text, index) => __jsx(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, index % 2 === 0 ? __jsx(InboxIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }) : __jsx(MailIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), __jsx(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP/components/CustomAppBar.js"],"names":["AppBar","Tabs","Tab","IconButton","Toolbar","Typography","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","MenuIcon","VpnKeyIcon","ChevronRightIcon","ChevronLeftIcon","InboxIcon","MailIcon","PhoneIcon","ApartmentIcon","PersonPinIcon","Link","React","makeStyles","useTheme","auth","useStyles","theme","appBar","background","palette","paper","color","text","primary","menuButton","marginRight","spacing","title","flexGrow","tabs","marginLeft","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","toolbar","display","alignItems","justifyContent","padding","mixins","CustomAppBar","props","classes","open","setOpen","useState","handleDrawerOpen","handleDrawerClose","value","setValue","handleLogout","signOut","then","alert","catch","error","console","log","err","handleChange","event","newValue","pathname","query","refresh","direction","map","index"],"mappings":"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","sourcesContent":["import {AppBar, Tabs,Tab, IconButton, Toolbar, Typography, Divider,Drawer,List,ListItem,ListItemIcon,ListItemText} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/menu';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport InboxIcon from '@material-ui/icons/Inbox'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport PersonPinIcon from '@material-ui/icons/Person'\r\nimport Link from 'next/link'\r\nimport React from \"react\";\r\nimport {makeStyles,useTheme} from \"@material-ui/core/styles\";\r\nimport {auth} from \"../firebase/index\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        background: theme.palette.background.paper,\r\n        color: theme.palette.text.primary\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 0,\r\n    },\r\n    tabs: {\r\n        flexGrow: 1,\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    drawer: {\r\n        width: 240,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: 240,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    }\r\n}));\r\n\r\nexport default function CustomAppBar(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleLogout = () => {\r\n        auth.signOut().then(function() {\r\n            alert('Logout successful');\r\n        }).catch(function(error) {\r\n            alert('OOps something went wrong check your console');\r\n            console.log(err);\r\n        });\r\n    };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\"  className={classes.appBar}>\r\n                <Toolbar variant=\"dense\" >\r\n                    <IconButton\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                     >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h5\" noWrap component={\"div\"}>\r\n                        {props.text}\r\n                    </Typography>\r\n                    <Link href={{pathname:\"/login\", query:{refresh:'false'}}}>\r\n                    <IconButton aria-label=\"display more actions\" edge=\"end\" color=\"inherit\">\r\n                        <VpnKeyIcon />\r\n                    </IconButton>\r\n                    </Link>\r\n                    <IconButton onClick={handleLogout} aria-label=\"display more actions\" edge=\"end\" color=\"inherit\">\r\n                        <VpnKeyIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer variant=\"permanent\">\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}