{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider, makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { lightTheme, darkTheme } from '../components/Theme';\nimport CustomAppBar from \"../components/CustomAppBar\";\nimport { Switch, FormControlLabel, Box, Divider, Drawer, List, ListItem, ListItemIcon, ListItemText, IconButton, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport clsx from 'clsx';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { auth } from '../firebase/index';\nimport MenuIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport Link from \"next/link\";\nexport default function MyApp(props) {\n  var _useState = useState(false),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var _useState2 = useState(true),\n      showBtn = _useState2[0],\n      setShowBtn = _useState2[1];\n\n  var handleLogout = function handleLogout() {\n    auth.signOut().then(function () {\n      alert('Logout successful');\n    })[\"catch\"](function (error) {\n      alert('OOps something went wrong check your console');\n      console.log(err);\n    });\n  };\n\n  var themeReg = /theme=(\\w+)/;\n  var classes = useTheme();\n  var router = useRouter();\n  useEffect(function () {\n    var themeCookie = document.cookie.match(themeReg);\n    if (themeCookie) setTheme(JSON.parse(themeCookie[1])); // Remove the server-side injected CSS.\n\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n\n  var switchTheme = function switchTheme() {\n    document.cookie = 'theme=' + !theme;\n    setTheme(!theme);\n  };\n\n  function toggleThemeSwitch(value) {\n    setShowBtn(value);\n  }\n\n  ;\n  var Component = props.Component,\n      pageProps = props.pageProps;\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), __jsx(ThemeProvider, {\n    theme: theme ? darkTheme : lightTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), showBtn ? __jsx(CustomAppBar, {\n    component: Component,\n    theme: theme,\n    componentProps: pageProps,\n    text: \"Some name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }) : null, showBtn ? __jsx(FormControlLabel, {\n    labelPlacement: \"start\",\n    label: \"Dark mode\",\n    control: __jsx(Switch, {\n      checked: theme,\n      onChange: switchTheme.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }) : null));\n}","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP/pages/_app.js"],"names":["React","useEffect","useState","App","Head","useRouter","ThemeProvider","makeStyles","useTheme","CssBaseline","lightTheme","darkTheme","CustomAppBar","Switch","FormControlLabel","Box","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","IconButton","AppBar","Toolbar","Typography","VpnKeyIcon","clsx","ChevronRightIcon","ChevronLeftIcon","InboxIcon","MailIcon","auth","MenuIcon","Link","MyApp","props","theme","setTheme","showBtn","setShowBtn","handleLogout","signOut","then","alert","error","console","log","err","themeReg","classes","router","themeCookie","document","cookie","match","JSON","parse","jssStyles","querySelector","parentElement","removeChild","switchTheme","toggleThemeSwitch","value","Component","pageProps","bind"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport App from 'next/app';\r\nimport Head from 'next/head';\r\nimport {useRouter} from 'next/router';\r\nimport { ThemeProvider,makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {lightTheme,darkTheme} from '../components/Theme';\r\nimport CustomAppBar from \"../components/CustomAppBar\";\r\nimport {\r\n    Switch,\r\n    FormControlLabel,\r\n    Box,\r\n    Divider,\r\n    Drawer,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    IconButton,\r\n    AppBar, Toolbar, Typography\r\n} from \"@material-ui/core\";\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport clsx from 'clsx';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport InboxIcon from '@material-ui/icons/Inbox'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\nimport {auth} from '../firebase/index';\r\nimport MenuIcon from \"@material-ui/core/SvgIcon/SvgIcon\";\r\nimport Link from \"next/link\";\r\n\r\nexport default function MyApp (props) {\r\n\r\n        const [theme,setTheme] = useState(false);\r\n        const [showBtn,setShowBtn] = useState(true);\r\n\r\n        const handleLogout = () => {\r\n            auth.signOut().then(function() {\r\n                alert('Logout successful');\r\n            }).catch(function(error) {\r\n                alert('OOps something went wrong check your console');\r\n                console.log(err);\r\n            });\r\n        };\r\n\r\n        const themeReg = /theme=(\\w+)/;\r\n        const classes = useTheme();\r\n        const router = useRouter();\r\n\r\n    useEffect(()=> {\r\n        const themeCookie = document.cookie.match(themeReg);\r\n\r\n        if(themeCookie)\r\n            setTheme(JSON.parse(themeCookie[1]));\r\n\r\n        // Remove the server-side injected CSS.\r\n        const jssStyles = document.querySelector('#jss-server-side');\r\n        if (jssStyles) {\r\n            jssStyles.parentElement.removeChild(jssStyles);\r\n        }\r\n    },[]);\r\n\r\n    const switchTheme = () => {\r\n        document.cookie = 'theme='+(!theme);\r\n        setTheme(!theme);\r\n    };\r\n\r\n    function toggleThemeSwitch(value) {\r\n        setShowBtn(value);\r\n    };\r\n\r\n    const { Component, pageProps } = props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>My page</title>\r\n                    <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n                </Head>\r\n                <ThemeProvider theme={theme?darkTheme:lightTheme}>\r\n                    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n                    {/*<div style={\r\n                        {display: \"flex\",\r\n                        flexFlow: \"column\",\r\n                        height: \"100vh\"}\r\n                    }>*/}\r\n                    <CssBaseline />\r\n\r\n                    {showBtn?<CustomAppBar component={Component} theme={theme} componentProps={pageProps} text={\"Some name\"}/>:null}\r\n\r\n                    {showBtn?\r\n                        <FormControlLabel labelPlacement={\"start\"} label={\"Dark mode\"} control={<Switch checked={theme} onChange={switchTheme.bind(this)}/>}/>\r\n                        :null}\r\n                    {/*</div>*/}\r\n\r\n                </ThemeProvider>\r\n            </React.Fragment>\r\n        );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}