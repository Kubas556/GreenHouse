{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jakub Sedlak\\\\WebstormProjects\\\\projekt_CP - typescript\\\\pages\\\\temperature\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport withAuth from \"../../components/WithAuth\";\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\nimport Tempmeter from \"../../components/Tempmeter\";\nimport Termostat from \"../../components/Termostat\";\nimport { firebase } from \"../../firebase/index\";\nimport { Bar } from \"react-chartjs-2\";\nvar useStyle = makeStyles(function (theme) {\n  return {\n    center: {\n      display: 'flex'\n    },\n    controllComponent: {\n      margin: '50px',\n      padding: '1rem'\n    }\n  };\n});\n\nfunction Id(props) {\n  var classes = useStyle();\n\n  var _useState = useState(-50),\n      temp = _useState[0],\n      setTemp = _useState[1];\n\n  var _useState2 = useState(),\n      tempHistory = _useState2[0],\n      setTempHistory = _useState2[1];\n\n  var _useState3 = useState(),\n      defTemp = _useState3[0],\n      setDefTemp = _useState3[1];\n\n  var router = useRouter();\n  var id = router.query.id;\n  var tempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/temp\");\n  var tempHistoryData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/temps\");\n  var targetTempData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\");\n\n  var termostatChange = function termostatChange(value) {\n    firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/targetTemp\").set(value);\n  };\n\n  useEffect(function () {\n    tempData.on('value', function (data) {\n      setTemp(data.val());\n    });\n    tempHistoryData.on('value', function (data) {\n      setTempHistory(data.val());\n    });\n    targetTempData.once('value', function (data) {\n      setDefTemp(data.val());\n    });\n  }, []);\n  useEffect(function () {//console.log(tempHistory);\n  }, tempHistory);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Teplota\"), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Tempmeter, {\n    theme: props.theme,\n    temp: temp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(Paper, {\n    elevation: 3,\n    style: {\n      padding: '1rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Termostat, {\n    theme: props.theme,\n    onValueChanged: termostatChange,\n    defaultValue: defTemp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    className: classes.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.controllComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Bar, {\n    data: {\n      labels: ['time'],\n      datasets: [{\n        label: 'temp',\n        data: [2, 1, 5, 1, 6, 4, 2, 9, 5, 6, 4, 6, 5],\n        backgroundColor: 'red',\n        borderColor: '#1DB954',\n        borderWidth: 0\n      }]\n    },\n    options: {\n      maintainAspectRatio: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })))));\n}\n\nfunction ex(props) {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useState4 = useState(\"\"),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var nameData = firebase.database().ref(\"/users/\" + props.user + \"/devices/\" + id + \"/name\");\n  useEffect(function () {\n    nameData.on('value', function (data) {\n      setName(data.val());\n    });\n  }, []);\n  return __jsx(WithDrawerAppBar, {\n    component: Id,\n    title: name,\n    deviceId: id.toString(),\n    componentProps: props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  });\n}\n\nexport default withAuth(ex);","map":{"version":3,"sources":["C:/Users/Jakub Sedlak/WebstormProjects/projekt_CP - typescript/pages/temperature/[id].tsx"],"names":["makeStyles","React","useEffect","useState","useRouter","Typography","Paper","withAuth","WithDrawerAppBar","Tempmeter","Termostat","firebase","Bar","useStyle","theme","center","display","controllComponent","margin","padding","Id","props","classes","temp","setTemp","tempHistory","setTempHistory","defTemp","setDefTemp","router","id","query","tempData","database","ref","user","tempHistoryData","targetTempData","termostatChange","value","set","on","data","val","once","labels","datasets","label","backgroundColor","borderColor","borderWidth","maintainAspectRatio","ex","name","setName","nameData","toString"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport useSWR from 'swr';\r\nimport {DatePicker,MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport {createMuiTheme, makeStyles, ThemeProvider} from '@material-ui/core/styles';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {orange} from \"@material-ui/core/colors\";\r\nimport {useRouter} from \"next/router\";\r\nimport {Typography,Paper} from \"@material-ui/core\";\r\nimport withAuth from \"../../components/WithAuth\";\r\nimport WithDrawerAppBar from \"../../components/WithDrawerAppBar\";\r\nimport Tempmeter from \"../../components/Tempmeter\";\r\nimport Termostat from \"../../components/Termostat\";\r\nimport {auth, firebase} from \"../../firebase/index\";\r\nimport IPageProps from \"../../interfaces/IPageProps\";\r\nimport Loading from \"../../components/Loading\";\r\nimport {string} from \"prop-types\";\r\nimport {Bar} from \"react-chartjs-2\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    center:{\r\n        display:'flex'\r\n    },\r\n    controllComponent:{\r\n        margin:'50px',\r\n        padding:'1rem'\r\n    }\r\n}));\r\n\r\nfunction Id(props:IPageProps) {\r\n    const classes = useStyle();\r\n    const [temp,setTemp] = useState<number>(-50);\r\n    const [tempHistory,setTempHistory] = useState<object[]>();\r\n    const [defTemp,setDefTemp] = useState<number>();\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n\r\n    let tempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/temp\");\r\n    let tempHistoryData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/temps\");\r\n    let targetTempData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\");\r\n\r\n    const termostatChange = (value:number) => {\r\n        firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/targetTemp\").set(value);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        tempData.on('value',data=>{\r\n            setTemp(data.val());\r\n        });\r\n\r\n        tempHistoryData.on('value',data=>{\r\n            setTempHistory(data.val());\r\n        });\r\n\r\n        targetTempData.once('value',data=>{\r\n            setDefTemp(data.val());\r\n        });\r\n\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        //console.log(tempHistory);\r\n    },tempHistory);\r\n\r\n return(\r\n     <div>\r\n         <Typography component={\"h1\"} variant={\"h2\"}>\r\n             Teplota\r\n         </Typography>\r\n         <div className={classes.center}>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n                     <Tempmeter theme={props.theme} temp={temp}/>\r\n                 </Paper>\r\n             </div>\r\n             <div className={classes.controllComponent}>\r\n                 <Paper elevation={3} style={{padding: '1rem'}}>\r\n                     <Termostat theme={props.theme} onValueChanged={termostatChange} defaultValue={defTemp}/>\r\n                 </Paper>\r\n             </div>\r\n         </div>\r\n         <div className={classes.center}>\r\n            <div className={classes.controllComponent}>\r\n                <Paper>\r\n                    <Bar data={{\r\n                        labels:['time'],\r\n                        datasets: [{\r\n                            label: 'temp',\r\n                            data: [2,1,5,1,6,4,2,9,5,6,4,6,5],\r\n                            backgroundColor: 'red',\r\n                            borderColor: '#1DB954',\r\n                            borderWidth: 0\r\n                        }]\r\n                    }} options={{ maintainAspectRatio: false }}/>\r\n                </Paper>\r\n            </div>\r\n         </div>\r\n     </div>\r\n )\r\n}\r\n\r\nfunction ex(props:IPageProps) {\r\n    const router = useRouter();\r\n    const { id } = router.query;\r\n    const [name,setName] = useState(\"\");\r\n    let nameData = firebase.database().ref(\"/users/\"+props.user+\"/devices/\"+id+\"/name\");\r\n    useEffect(()=>{\r\n        nameData.on('value',data=>{\r\n            setName(data.val());\r\n        });\r\n    },[]);\r\n    return(\r\n        <WithDrawerAppBar component={Id} title={name} deviceId={id.toString()} componentProps={props}/>\r\n    )\r\n}\r\n\r\nexport default withAuth(ex);"]},"metadata":{},"sourceType":"module"}